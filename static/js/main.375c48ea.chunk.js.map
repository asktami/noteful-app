{"version":3,"sources":["config.js","NotefulContext.js","Header.js","Footer.js","FolderError.js","FolderList.js","FolderItem.js","NoteError.js","NoteItem.js","NoteList.js","Note.js","ValidationError.js","AddFolder.js","AddNote.js","App.js","index.js"],"names":["API_FOLDERS","API_NOTES","NotefulContext","React","createContext","notes","folders","deleteNote","addNote","addFolder","addErrorNotes","Header","props","to","Footer","href","target","rel","FolderError","state","hasError","error","errorInfo","this","children","Component","FolderList","useContext","className","map","folder","key","id","match","params","folderId","role","aria-label","name","FolderItem","context","activeNote","find","note","noteId","activeFolder","filter","onClick","history","goBack","NoteError","NoteItem","handleClickDelete","e","preventDefault","fetch","config","method","headers","then","res","ok","json","data","location","pathname","includes","push","catch","notesError","class","errorNotes","value","modified","split","contextType","NoteList","foldernotes","console","log","length","Note","content","ValidationError","message","AddFolder","apiError","formValid","errorCount","errors","updateErrorCount","count","Object","values","forEach","val","setState","valid","validateField","err","trim","handleChange","event","handleClickCancel","handleSubmit","body","JSON","stringify","onSubmit","noValidate","htmlFor","type","required","aria-required","aria-invalid","onChange","disabled","AddNote","Date","routes","path","exact","header","aside","section","App","useState","setFolders","setNotes","foldersError","setFoldersError","setNotesError","useEffect","Error","status","contextObj","newNotes","Provider","A","component","S","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.375c48ea.chunk.js","sourcesContent":["// hosted on github\n// https://my-json-server.typicode.com/asktami/react-router-context-noteful\n\nexport default {\n\tAPI_FOLDERS: `https://my-json-server.typicode.com/asktami/react-router-context-noteful/folders`,\n\tAPI_NOTES: `https://my-json-server.typicode.com/asktami/react-router-context-noteful/notes`\n};\n\n// hosted locally:\n// export default {\n// \tAPI_FOLDERS: `http://localhost:9090/folders`,\n// \tAPI_NOTES: `http://localhost:9090/notes`\n// };\n\n// see documentation at\n// http://localhost:9090\n\n// see data at\n// http://localhost:9090/db\n","import React from 'react';\n\nconst NotefulContext = React.createContext({\n\tnotes: [],\n\tfolders: [],\n\tdeleteNote: () => {},\n\taddNote: () => {},\n\taddFolder: () => {},\n\taddErrorNotes: () => {}\n});\n\nexport default NotefulContext;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n\treturn (\n\t\t<header>\n\t\t\t<span>\n\t\t\t\t<h1>\n\t\t\t\t\t<Link to=\"/\">Noteful</Link>\n\t\t\t\t</h1>\n\t\t\t</span>\n\t\t\t<span>a React app</span>\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = props => {\n\treturn (\n\t\t<footer>\n\t\t\t&copy; 2019{' '}\n\t\t\t<a\n\t\t\t\thref=\"http://www.asktami.com\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t>\n\t\t\t\tTami Williams\n\t\t\t</a>\n\t\t</footer>\n\t);\n};\n\nexport default Footer;\n","// Error Boundary component\n// NOTE: MUST use class\n\nimport React from 'react';\n\nclass FolderError extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromError(error) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { hasError: true };\n\t}\n\n\tcomponentDidCatch(error, errorInfo) {\n\t\t// You can also log the error to an error reporting service\n\t\t// logErrorToMyService(error, errorInfo);\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\t// You can render any custom fallback UI\n\t\t\treturn <h2>Could not display this folder.</h2>;\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\nexport default FolderError;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport FolderError from './FolderError';\nimport NotefulContext from './NotefulContext';\n\nconst FolderList = props => {\n\t// need to grab NotefulContext (globals)\n\tconst contextType = useContext(NotefulContext);\n\tconst { folders } = contextType;\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"header-container\">\n\t\t\t\t<span>\n\t\t\t\t\t<h2>Folders</h2>\n\t\t\t\t</span>\n\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t<span>\n\t\t\t\t\t<NavLink to={'/add-folder'}>\n\t\t\t\t\t\t<button className=\"btn-add\">+</button>\n\t\t\t\t\t</NavLink>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<ul>\n\t\t\t\t{folders.map(folder => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tkey={folder.id}\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tfolder.id === props.match.params.folderId ? ' active' : null\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FolderError>\n\t\t\t\t\t\t\t<NavLink to={`/folder/${folder.id}`}>\n\t\t\t\t\t\t\t\t<span role=\"img\" aria-label=\"Folder\">\n\t\t\t\t\t\t\t\t\t&#x1F4C2;\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t&nbsp;{folder.name}\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</FolderError>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\nexport default FolderList;\n\n// to catch bugs\n// check that get a folders array that has id and name\n// this array is the \"folders\" variable coming from context\nFolderList.propTypes = {\n\tfolders: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired\n\t\t})\n\t)\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport NotefulContext from './NotefulContext';\n\nconst FolderItem = props => {\n\tconst context = useContext(NotefulContext);\n\tconst { folders, notes } = context;\n\n\t// use the selected noteId to\n\t// - use the notes object & get the folderId\n\t// - from the folders object, use the folderId to get the note's parent folder\n\n\tconst activeNote = notes\n\t\t? notes.find(note => note.id === props.match.params.noteId)\n\t\t: '';\n\n\tif (!activeNote) return 'Sorry, no note found.';\n\n\tconst folderId = activeNote.folderId;\n\tconst activeFolder = folders.filter(folder => folder.id === folderId);\n\n\treturn (\n\t\t<>\n\t\t\t{!activeFolder\n\t\t\t\t? null\n\t\t\t\t: activeFolder.map(folder => (\n\t\t\t\t\t\t<div className=\"header-container\" key={folder.id}>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<h2>{folder.name}</h2>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t  ))}\n\n\t\t\t<br />\n\t\t\t<button className=\"btn-save\" onClick={props.history.goBack}>\n\t\t\t\tGo Back\n\t\t\t</button>\n\t\t</>\n\t);\n};\n\nexport default FolderItem;\n\n// to catch bugs\n// check that get a folders array that has id and name\n// this array is the \"folders\" variable coming from context\n// AND\n// check that get a notes array that has id, name, and modified\n// this array is the \"notes\" variable coming from context\nFolderItem.propTypes = {\n\tfolders: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired\n\t\t})\n\t),\n\tnotes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tmodified: PropTypes.string.isRequired\n\t\t})\n\t)\n};\n","// Error Boundary component\n// NOTE: MUST use class\n\nimport React from 'react';\n\nclass NoteError extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromError(error) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { hasError: true };\n\t}\n\n\tcomponentDidCatch(error, errorInfo) {\n\t\t// You can also log the error to an error reporting service\n\t\t// logErrorToMyService(error, errorInfo);\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\t// You can render any custom fallback UI\n\t\t\treturn <h2>Could not display this note.</h2>;\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\nexport default NoteError;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport config from './config';\nimport NotefulContext from './NotefulContext';\n\n// this function 1st deletes via the API, then from state\n// context.deleteNote = the update function, to update state in context\n// Using a CLASS instead of a functional component I do *** NOT *** have to\n//  pass in PROPS to get history, location and match (AND props.note.id) AND pass in CONTEXT for deleteNote function because there is no other way for the handleClickDelete function\n// - to know what is in Context\n// - to know history, location and match\n\nexport default class NoteItem extends React.Component {\n\t// need to grab NotefulContext (globals)\n\tstatic contextType = NotefulContext;\n\n\thandleClickDelete = e => {\n\t\te.preventDefault();\n\n\t\tconst noteId = this.props.note.id;\n\n\t\tfetch(config.API_NOTES + `/${noteId}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\t// get the error message from the response,\n\t\t\t\t\treturn res.json().then(error => {\n\t\t\t\t\t\t// then throw it\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\t// call the callback function when the request is successful\n\t\t\t\t// this is where the App component can remove it from state\n\t\t\t\t// ie. update the notes stored in state\n\t\t\t\t// which also updates the notes stored in context\n\t\t\t\tthis.context.deleteNote(noteId);\n\n\t\t\t\t// if in Note detail, return to show all notes list\n\t\t\t\tif (this.props.location.pathname.includes('/note/')) {\n\t\t\t\t\tthis.props.history.push(`/`);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.context.addErrorNotes(error);\n\t\t\t});\n\t};\n\n\trender() {\n\t\t// to see noteItem notesError in ui & trigger NoteError boundary:\n\t\t// this.context.addErrorNotes({ value: 'notesItemAPI errorMessage' });\n\n\t\treturn (\n\t\t\t<div className=\"note-item\">\n\t\t\t\t{this.context.notesError && (\n\t\t\t\t\t<p class=\"error\">{this.context.errorNotes.value}</p>\n\t\t\t\t)}\n\t\t\t\t{/*\n\t\t\tTHIS CAUSED A staticContent ERROR:\n\t\t\t<NavLink to={`/note/${note.id}`} {...props}>\n\t\t\t\t<h3>{note.title}</h3>\n\t\t\t</NavLink> */}\n\t\t\t\t<NavLink\n\t\t\t\t\tto={{\n\t\t\t\t\t\tpathname: `/note/${this.props.note.id}`,\n\t\t\t\t\t\tprops: this.props\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<h3>{this.props.note.name}</h3>\n\t\t\t\t</NavLink>\n\t\t\t\t<div className=\"button-container\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\tModified on{' '}\n\t\t\t\t\t\t<span className=\"note-datemod\">\n\t\t\t\t\t\t\t{this.props.note.modified\n\t\t\t\t\t\t\t\t? this.props.note.modified.split('T', 1)[0]\n\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<button className=\"btn-delete\" onClick={this.handleClickDelete}>\n\t\t\t\t\t\t\t-\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// to catch bugs\n// check that get a notes array that has id, name, and modified\n// this array is the \"notes\" variable coming from context\nNoteItem.propTypes = {\n\tnotes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tmodified: PropTypes.string.isRequired\n\t\t})\n\t)\n};\n\n// default values\n// ONLY for props that are NOT required\n// so do NOT create NoteItem.defaultProps\n// NoteItem.defaultProps = {\n// \tnote: {\n// \t\tid: '',\n// \t\tname: '',\n// \t\tmodified: ''\n// \t}\n// };\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport NoteError from './NoteError';\n\nimport NotefulContext from './NotefulContext';\n\nimport NoteItem from './NoteItem';\n\nconst NoteList = props => {\n\t// need to grab NotefulContext (globals)\n\tconst contextType = useContext(NotefulContext);\n\tconst { notes } = contextType;\n\n\t// if selected a folder, show only the notes in that folder\n\t// otherwise show all notes from all folders\n\tconst foldernotes = props.match.params.folderId\n\t\t? notes.filter(note => note.folderId === props.match.params.folderId)\n\t\t: notes;\n\n\tconsole.log(\n\t\t'NoteList props.match.params.folderId = ',\n\t\tprops.match.params.folderId\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"header-container\">\n\t\t\t\t<span>\n\t\t\t\t\t<h2>Notes</h2>\n\t\t\t\t</span>\n\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t<span>\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\t// if just passing url:\n\t\t\t\t\t\t// to={'/add-note'}\n\n\t\t\t\t\t\t// to pass selected folderId:\n\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\tpathname: '/add-note',\n\t\t\t\t\t\t\tstate: { folderId: props.match.params.folderId }\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<button className=\"btn-add\">+</button>\n\t\t\t\t\t</NavLink>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t{foldernotes.length > 0 ? (\n\t\t\t\tfoldernotes.map(note => (\n\t\t\t\t\t<article key={note.id}>\n\t\t\t\t\t\t<NoteError>\n\t\t\t\t\t\t\t<div className=\"note\">\n\t\t\t\t\t\t\t\t{/*\n\t\t\t\t\t\t\t{...note}\n\t\t\t\t\t\t\tuse spread here IF want whole note object, and then get inside NoteItem via note.key\n\t\t\t\t\t\t\talternative is\n\t\t\t\t\t\t\tnote={note} and in NoteItem get via props.note.key\n\n\t\t\t\t\t\t\tNOTE:\n\t\t\t\t\t\t\tMUST pass {...props} to have the history, location, and match props inside NoteItem\n\t\t\t\t\t\t\t*/}\n\t\t\t\t\t\t\t\t<NoteItem note={note} {...props} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</NoteError>\n\t\t\t\t\t</article>\n\t\t\t\t))\n\t\t\t) : (\n\t\t\t\t<article className=\"no-border\">\n\t\t\t\t\t<div className=\"note\">No notes in this folder.</div>\n\t\t\t\t</article>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default NoteList;\n\n// to catch bugs\n// check that get a notes array that has id, name, and modified\n// this array is the \"notes\" variable coming from context\nNoteList.propTypes = {\n\tnotes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tmodified: PropTypes.string.isRequired\n\t\t})\n\t)\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport NoteItem from './NoteItem';\n\nimport NotefulContext from './NotefulContext';\n\nconst Note = props => {\n\t// need to grab NotefulContext (globals)\n\tconst context = useContext(NotefulContext);\n\tconst { notes } = context;\n\n\t// NOTE\n\t// reloading the browser wipes the context from memory\n\t// so need to handle if user reloads the browser and its undefined\n\t// done by adding || {} here AND : '' for props.modified in NoteItem too\n\tconst note = notes.find(note => note.id === props.match.params.noteId) || {};\n\n\treturn (\n\t\t<article>\n\t\t\t<div className=\"note\">\n\t\t\t\t<NoteItem {...props} note={note} />\n\t\t\t\t<p className=\"note-content\">{note.content}</p>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default Note;\n\n// to catch bugs\n// check that get a notes array that has id, name, content, and modified\n// this array is the \"notes\" variable coming from context\nNote.propTypes = {\n\tnotes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tcontent: PropTypes.string.isRequired,\n\t\t\tmodified: PropTypes.string.isRequired\n\t\t})\n\t)\n};\n","import React from 'react';\n\nexport default function ValidationError(props) {\n\tif (props.message) {\n\t\treturn <div className=\"error\">{props.message}</div>;\n\t}\n\n\treturn <></>;\n}\n","import React from 'react';\nimport config from './config';\n\nimport NotefulContext from './NotefulContext';\n\nimport ValidationError from './ValidationError';\n\nclass AddFolder extends React.Component {\n\tstatic contextType = NotefulContext;\n\n\tstate = {\n\t\tapiError: null,\n\t\tformValid: false,\n\t\terrorCount: null,\n\t\tname: '',\n\t\terrors: {\n\t\t\tname: 'You must enter a folder name'\n\t\t}\n\t};\n\n\tupdateErrorCount = () => {\n\t\tlet errors = this.state.errors;\n\t\tlet count = 0;\n\n\t\tObject.values(errors).forEach(val => {\n\t\t\tif (val.length > 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({ errorCount: count });\n\t\tlet valid = count === 0 ? true : false;\n\t\tthis.setState({ formValid: valid });\n\t};\n\n\tvalidateField = (name, value) => {\n\t\tlet err = '';\n\n\t\tif (name === 'name') {\n\t\t\tif (value.trim().length === 0) {\n\t\t\t\terr = 'Folder name is required';\n\t\t\t} else if (value.trim().length < 3) {\n\t\t\t\terr = 'Folder name must be at least 3 characters long';\n\t\t\t}\n\t\t}\n\n\t\tconst { errors } = { ...this.state };\n\t\terrors[name] = err;\n\t\tthis.setState({ errors });\n\t};\n\n\thandleChange = event => {\n\t\tconst { name, value } = event.target;\n\t\tthis.setState({ [name]: value.trim() });\n\n\t\tthis.validateField(name, value);\n\t\tthis.updateErrorCount();\n\t};\n\n\thandleClickCancel = () => {\n\t\tthis.props.history.push('/');\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\n\t\t// do NOT submit form if any errors\n\t\tif (this.state.errorCount > 0) return;\n\n\t\t// get the form fields from the event\n\t\tconst { name } = e.target;\n\t\tconst folder = {\n\t\t\tname: name.value\n\t\t};\n\t\tthis.setState({ apiError: null });\n\n\t\tfetch(config.API_FOLDERS, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(folder),\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\t// get the error message from the response,\n\t\t\t\t\treturn res.json().then(error => {\n\t\t\t\t\t\t// then throw it\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\t// clear form values\n\t\t\t\tname.value = '';\n\n\t\t\t\tthis.context.addFolder(data);\n\n\t\t\t\t// return to list:\n\t\t\t\tthis.props.history.push('/');\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.setState({ apiError: error });\n\t\t\t});\n\t};\n\trender() {\n\t\tconst { errors } = this.state;\n\n\t\tif (this.state.apiError) {\n\t\t\treturn <p class=\"error\">{this.state.apiError}</p>;\n\t\t}\n\n\t\treturn (\n\t\t\t<form className=\"addFolderForm\" onSubmit={this.handleSubmit} noValidate>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>New Folder</legend>\n\t\t\t\t\t<label htmlFor=\"name\">Name</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.name.length > 0 && <ValidationError message={errors.name} />}\n\t\t\t\t\t<br />\n\t\t\t\t\t<button className=\"btn-cancel\" onClick={this.handleClickCancel}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>{' '}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn-save\"\n\t\t\t\t\t\tdisabled={this.state.formValid === false}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave Folder\n\t\t\t\t\t</button>\n\t\t\t\t</fieldset>\n\n\t\t\t\t{this.state.errorCount !== null ? (\n\t\t\t\t\t<p className=\"form-status\">\n\t\t\t\t\t\tForm is {this.state.formValid ? 'complete  ✅' : 'incomplete  ❌'}\n\t\t\t\t\t</p>\n\t\t\t\t) : null}\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default AddFolder;\n","import React from 'react';\nimport config from './config';\n\nimport NotefulContext from './NotefulContext';\n\nimport ValidationError from './ValidationError';\n\nclass AddNote extends React.Component {\n\tstatic contextType = NotefulContext;\n\n\tstate = {\n\t\tapiError: null,\n\t\tformValid: false,\n\t\terrorCount: null,\n\t\tfolderId: this.props.location.state.folderId || '', // use selected folderId passed in via NavLink\n\t\tname: '',\n\t\tcontent: '',\n\t\terrors: {\n\t\t\tfolderId:\n\t\t\t\t!this.props.location.state.folderId && 'You must select a folder', // error only if no folderId passed in via NavLink\n\t\t\tname: 'You must enter a note title',\n\t\t\tcontent: 'You must enter a description'\n\t\t}\n\t};\n\n\t// to see addNote apiError in ui:\n\t/*\n\tstate = {\n\t\tapiError: 'addNote apiError errorMessage',\n\t\t...\n\t*/\n\n\tupdateErrorCount = () => {\n\t\tlet errors = this.state.errors;\n\t\tlet count = 0;\n\n\t\tObject.values(errors).forEach(val => {\n\t\t\tif (val.length > 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({ errorCount: count });\n\t\tlet valid = count === 0 ? true : false;\n\t\tthis.setState({ formValid: valid });\n\t};\n\n\tvalidateField = (name, value) => {\n\t\tlet err = '';\n\n\t\tif (name === 'name') {\n\t\t\tif (value.length === 0) {\n\t\t\t\terr = 'Note title is required';\n\t\t\t} else if (value.length < 3) {\n\t\t\t\terr = 'Note title must be at least 3 characters long';\n\t\t\t}\n\t\t}\n\n\t\tif (name === 'folderId') {\n\t\t\tif (value.length === 0) {\n\t\t\t\terr = 'You must select a folder';\n\t\t\t}\n\t\t}\n\n\t\tif (name === 'content') {\n\t\t\tif (value.length === 0) {\n\t\t\t\terr = 'You must enter a description';\n\t\t\t} else if (value.length < 5) {\n\t\t\t\terr = 'The description must be at least 5 characters long';\n\t\t\t}\n\t\t}\n\n\t\tconst { errors } = { ...this.state };\n\t\terrors[name] = err;\n\t\tthis.setState({ errors });\n\t};\n\n\thandleChange = event => {\n\t\tconst { name, value } = event.target;\n\t\tthis.setState({ [name]: value.trim() });\n\n\t\tthis.validateField(name, value.trim());\n\t\tthis.updateErrorCount();\n\t};\n\n\thandleClickCancel = () => {\n\t\tthis.props.history.push('/');\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\t\t// this.updateErrorCount();\n\n\t\t// do NOT submit form if any errors\n\t\tif (this.state.errorCount > 0) return;\n\n\t\t// get the form fields from the event\n\t\tconst { folderId, name, content } = e.target;\n\t\tconst note = {\n\t\t\tfolderId: folderId.value,\n\t\t\tname: name.value,\n\t\t\tcontent: content.value,\n\t\t\tmodified: new Date()\n\t\t};\n\t\tthis.setState({ apiError: null });\n\n\t\tfetch(config.API_NOTES, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(note),\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\t// get the error message from the response,\n\t\t\t\t\treturn res.json().then(error => {\n\t\t\t\t\t\t// then throw it\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\t// clear form values\n\t\t\t\tfolderId.value = '';\n\t\t\t\tname.value = '';\n\t\t\t\tcontent.value = '';\n\n\t\t\t\tthis.context.addNote(data);\n\n\t\t\t\t// return to list:\n\t\t\t\tthis.props.history.push('/');\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.setState({ apiError: error });\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst { errors } = this.state;\n\t\tconst folders = this.context.folders;\n\n\t\t// selected folderId passed in via NavLink:\n\t\t// console.log(\n\t\t// \t'AddNote props.location.state.folderId = ',\n\t\t// \tthis.props.location.state.folderId\n\t\t// );\n\n\t\tif (this.state.apiError) {\n\t\t\treturn <p class=\"error\">{this.state.apiError}</p>;\n\t\t}\n\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>New Note</legend>\n\t\t\t\t\t<label htmlFor=\"folderId\">Folder</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tid=\"folderId\"\n\t\t\t\t\t\tname=\"folderId\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tvalue={this.state.folderId}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"\">Select a folder</option>\n\t\t\t\t\t\t{folders.map(folder => (\n\t\t\t\t\t\t\t<option key={folder.id} value={folder.id}>\n\t\t\t\t\t\t\t\t{folder.name}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t\t{errors.folderId.length > 0 && (\n\t\t\t\t\t\t<ValidationError message={errors.folderId} />\n\t\t\t\t\t)}\n\t\t\t\t\t<label htmlFor=\"name\">Title</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.name.length > 0 && <ValidationError message={errors.name} />}\n\t\t\t\t\t<label htmlFor=\"content\">Description</label>\n\t\t\t\t\t<textarea id=\"content\" name=\"content\" onChange={this.handleChange} />\n\t\t\t\t\t{errors.content.length > 0 && (\n\t\t\t\t\t\t<ValidationError message={errors.content} />\n\t\t\t\t\t)}\n\t\t\t\t\t<br />\n\t\t\t\t\t<button className=\"btn-cancel\" onClick={this.handleClickCancel}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>{' '}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn-save\"\n\t\t\t\t\t\tdisabled={this.state.formValid === false}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave Note\n\t\t\t\t\t</button>\n\t\t\t\t</fieldset>\n\n\t\t\t\t{this.state.errorCount !== null ? (\n\t\t\t\t\t<p className=\"form-status\">\n\t\t\t\t\t\tForm is {this.state.formValid ? 'complete  ✅' : 'incomplete  ❌'}\n\t\t\t\t\t</p>\n\t\t\t\t) : null}\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default AddNote;\n","import React, { useState, useEffect } from 'react';\n\nimport { Route } from 'react-router-dom';\nimport './App.css';\n\nimport config from './config';\n\n// when using dummyStore text datafile:\n// import dummyStore from './dummy-store';\n\n// using React.Context:\nimport NotefulContext from './NotefulContext';\n\nimport Header from './Header';\nimport Footer from './Footer';\n\nimport FolderList from './FolderList';\nimport FolderItem from './FolderItem';\nimport NoteList from './NoteList';\nimport Note from './Note';\n\nimport AddFolder from './AddFolder';\nimport AddNote from './AddNote';\n\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: FolderList,\n\t\tsection: NoteList\n\t},\n\t{\n\t\tpath: '/folder/:folderId',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: FolderList,\n\t\tsection: NoteList\n\t},\n\t{\n\t\tpath: '/note/:noteId',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: FolderItem,\n\t\tsection: Note\n\t},\n\t{\n\t\tpath: '/add-folder',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: null,\n\t\tsection: AddFolder\n\t},\n\t{\n\t\tpath: '/add-note',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: null,\n\t\tsection: AddNote\n\t},\n\t{\n\t\tpath: '/:any/:any/:any',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: () => null,\n\t\tsection: () => 'Do not edit the  url!'\n\t}\n];\n\nconst App = props => {\n\t// // set default state variable values\n\t// setting default state with hooks\n\tconst [folders, setFolders] = useState([]);\n\tconst [notes, setNotes] = useState([]);\n\tconst [foldersError, setFoldersError] = useState(null);\n\tconst [notesError, setNotesError] = useState(null);\n\n\t// to see foldersError in ui:\n\t// const [foldersError, setFoldersError] = useState({ value: 'foldersAPI errorMessage' });\n\n\t// to see notesError in ui:\n\t// const [notesError, setNotesError] = useState({value: 'notesAPI errorMessage'});\n\n\t// deleteNotes updates state\n\t// and inside render context is updated with values from state\n\t// then context is used to display values in FolderList and NoteList\n\t/*\n    After making successful a DELETE API request, you can use a this.state.notes.filter method along with setState to remove a note from state and update context.\n    */\n\tconst deleteNote = noteId => {\n\t\tconst newNotes = notes.filter(note => note.id !== noteId);\n\t\tsetNotes(newNotes);\n\t};\n\n\tconst addNote = note => {\n\t\tsetNotes([...notes, note]);\n\t};\n\n\tconst addFolder = folder => {\n\t\tsetFolders([...folders, folder]);\n\t};\n\n\tconst addErrorNotes = error => {\n\t\tsetNotesError(error);\n\t};\n\n\t/*\n    // NOTE NOTE NOTE\n    // Pattern: every route is responsible for loading the data it needs from scratch\n\n    // So the component rendering the /detail/:id route needs to fetch data for itself, including the correct id to use from the url, via the props React Router provides.\n    */\n\n\tconst getFolders = () => {\n\t\tfetch(config.API_FOLDERS, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tthrow new Error(res.status);\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(setFolders)\n\t\t\t// passes res to setFolders function\n\t\t\t// shortcut which equals .then(res => this.setFolders(res))\n\t\t\t.catch(error => setFoldersError(error));\n\t};\n\n\tconst getNotes = () => {\n\t\tfetch(config.API_NOTES, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tthrow new Error(res.status);\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(setNotes)\n\t\t\t// passes res to setNotes function\n\t\t\t// shortcut which equals .then(res => this.setNotes(res))\n\t\t\t.catch(error => setNotesError(error));\n\t};\n\n\t// only load ONCE, to fetch initial API data\n\tuseEffect(() => {\n\t\tgetFolders();\n\t\tgetNotes();\n\t}, []); /* <-- add this */\n\n\t// create object to update the values stored in NotefulContext\n\tconst contextObj = {\n\t\tnotes: notes,\n\t\tfolders: folders,\n\t\tdeleteNote: deleteNote,\n\t\taddNote: addNote,\n\t\taddFolder: addFolder,\n\t\taddErrorNotes: addErrorNotes\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t{/* actually update the values stored in NotefulContext by passing contextObj into value\n\n                Use the Provider to make values available to all children/grandchildren/subcomponents\n\n                See: https://reactjs.org/docs/context.html#caveats\n\n                -- the code below will re-render all consumers every time the Provider re-renders because a new object is always created for value\n                */}\n\t\t\t<NotefulContext.Provider value={contextObj}>\n\t\t\t\t<main>\n\t\t\t\t\t<aside>\n\t\t\t\t\t\t{foldersError && <p class=\"error\">{foldersError.value}</p>}\n\t\t\t\t\t\t{routes.map(({ path, exact, aside: A }) => (\n\t\t\t\t\t\t\t<Route key={path} path={path} exact={exact} component={A} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</aside>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t{/* NOTE:\n                         CAN use render props to pass unfinishedMessage prop via route\n                         AND\n                         to pass location, match and history props to the component so that in the component I have access to the history object to push a new location into\n\n                                    render={props => (\n                                        <S\n                                        {...props}\n                                        unfinishedMessage={unfinishedMessage} />\n                                    )}\n\n                        can also pass unfinishedMessage via Context and do:\n                        component={S}\n                        */}\n\n\t\t\t\t\t\t{notesError && <p class=\"error\">{notesError.value}</p>}\n\n\t\t\t\t\t\t{routes.map(({ path, exact, section: S }) => (\n\t\t\t\t\t\t\t<Route key={path} path={path} exact={exact} component={S} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</section>\n\t\t\t\t</main>\n\t\t\t</NotefulContext.Provider>\n\n\t\t\t<Footer />\n\t\t</>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}