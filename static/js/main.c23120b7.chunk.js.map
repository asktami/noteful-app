{"version":3,"sources":["config.js","NotefulContext.js","Header.js","Footer.js","FolderList.js","FolderItem.js","NoteItem.js","NoteList.js","App.js","Note.js","index.js"],"names":["API_FOLDERS","API_NOTES","NotefulContext","React","createContext","folders","notes","deleteNote","addNote","addFolder","Header","props","to","Footer","href","target","rel","FolderList","this","context","className","onClick","togglePopup","map","folder","key","id","match","params","folderId","role","aria-label","name","Component","contextType","FolderItem","useContext","activeNote","find","note","noteId","activeFolder","filter","history","goBack","redirectToTarget","push","NoteItem","console","log","Consumer","pathname","modified","split","cb","fetch","config","method","headers","then","res","ok","json","error","data","catch","setState","errorNotes","handleClickDelete","NoteList","foldernotes","length","routes","path","exact","header","aside","section","content","App","state","errorFolders","alert","setFolders","setNotes","newNotes","getFolders","Error","status","getNotes","contextValue","Provider","value","A","render","S","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.c23120b7.chunk.js","sourcesContent":["export default {\n\tAPI_FOLDERS: `http://localhost:9090/folders`,\n\tAPI_NOTES: `http://localhost:9090/notes`\n};\n\n// see documentation at\n// http://localhost:9090\n\n// see data at\n// http://localhost:9090/db\n","import React from 'react';\n\nconst NotefulContext = React.createContext({\n\tfolders: [],\n\tnotes: [],\n\tdeleteNote: () => {},\n\taddNote: () => {},\n\taddFolder: () => {}\n});\n\nexport default NotefulContext;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n\treturn (\n\t\t<header>\n\t\t\t<span>\n\t\t\t\t<h1>\n\t\t\t\t\t<Link to=\"/\">Noteful</Link>\n\t\t\t\t</h1>\n\t\t\t</span>\n\t\t\t<span>a React app</span>\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = props => {\n\treturn (\n\t\t<footer>\n\t\t\t&copy; 2019{' '}\n\t\t\t<a\n\t\t\t\thref=\"http://www.asktami.com\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t>\n\t\t\t\tTami Williams\n\t\t\t</a>\n\t\t</footer>\n\t);\n};\n\nexport default Footer;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport NotefulContext from './NotefulContext';\n\nclass FolderList extends React.Component {\n\t// const contextType is needed to then say this.context\n\tstatic contextType = NotefulContext;\n\n\trender() {\n\t\tconst { folders } = this.context;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"header-container\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<h2>Folders</h2>\n\t\t\t\t\t</span>\n\t\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<button className=\"btn-add\" onClick={this.props.togglePopup}>\n\t\t\t\t\t\t\t+\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<ul>\n\t\t\t\t\t{folders.map(folder => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={folder.id}\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\tfolder.id === this.props.match.params.folderId\n\t\t\t\t\t\t\t\t\t? ' active'\n\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<NavLink to={`/folder/${folder.id}`}>\n\t\t\t\t\t\t\t\t<span role=\"img\" aria-label=\"Folder\">\n\t\t\t\t\t\t\t\t\t&#x1F4C2;\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t&nbsp;{folder.name}\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default FolderList;\n","import React, { useContext } from 'react';\n\nimport NotefulContext from './NotefulContext';\n\nconst FolderItem = props => {\n\tconst context = useContext(NotefulContext);\n\tconst { folders, notes } = context;\n\n\t// use the selected noteId to\n\t// - use the notes object & get the folderId\n\t// - from the folders object, use the folderId to get the note's parent folder\n\n\tconst activeNote = notes\n\t\t? notes.find(note => note.id === props.match.params.noteId)\n\t\t: '';\n\n\tif (!activeNote) return 'Sorry, no note found.';\n\n\tconst folderId = activeNote.folderId;\n\tconst activeFolder = folders.filter(folder => folder.id === folderId);\n\n\treturn (\n\t\t<>\n\t\t\t{!activeFolder\n\t\t\t\t? null\n\t\t\t\t: activeFolder.map(folder => (\n\t\t\t\t\t\t<div className=\"header-container\" key={folder.id}>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<h2>{folder.name}</h2>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t  ))}\n\n\t\t\t<br />\n\t\t\t<button className=\"btn-save\" onClick={props.history.goBack}>\n\t\t\t\tGo Back\n\t\t\t</button>\n\t\t</>\n\t);\n};\n\nexport default FolderItem;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport config from './config';\nimport NotefulContext from './NotefulContext';\n\n// redirect\nconst redirectToTarget = props => {\n\tprops.history.push(`/`);\n};\n\n// this function 1st deletes via the API, then from state\n// context.deleteNote = the updater function, to update state in context\nfunction handleClickDelete(noteId, cb, props) {\n\tfetch(config.API_NOTES + `/${noteId}`, {\n\t\tmethod: 'DELETE',\n\t\theaders: {\n\t\t\t'content-type': 'application/json'\n\t\t}\n\t})\n\t\t.then(res => {\n\t\t\tif (!res.ok) {\n\t\t\t\t// get the error message from the response,\n\t\t\t\treturn res.json().then(error => {\n\t\t\t\t\t// then throw it\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn res.json();\n\t\t})\n\t\t.then(data => {\n\t\t\t// call the callback function when the request is successful\n\t\t\t// this is where the App component can remove it from state\n\t\t\t// ie. update the notes stored in state\n\t\t\t// which also updates the notes stored in context\n\t\t\tcb(noteId);\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('delete note errorNotes = ', error);\n\t\t\tthis.setState({ errorNotes: error });\n\t\t});\n\n\t// redirect\n\tredirectToTarget(props);\n}\n\nconst NoteItem = props => {\n\tconsole.log('NoteItem props', props);\n\treturn (\n\t\t<NotefulContext.Consumer>\n\t\t\t{/*\n\t\t\tUse the Consumer to grab values from contex\n\t\t\t--- the value we're grabbing from context is the deleteNote function, we're passing it to the delete button\n\n \t\t\tQUESTION: what is context?\n\t\t\tANSWER:\n\t\t\tis it equal to the object inside NotefulCcontext.js?\n\t\t\tan anonymous function with the parameter context automatically defined by {context => ... }, don't know where the parameter function comes from, don't need to know where it comes from because we're using it to render a result; context is a variable containing data; this function is called by line 39 NotefulContext.Consumer\n\n\t\t\tNOTE: context could be any word since its just the parameter label\n\t\t\t*/}\n\n\t\t\t{context => (\n\t\t\t\t<div className=\"note-item\">\n\t\t\t\t\t{/*\n\t\t\tTHIS CAUSED A staticContent ERROR:\n\t\t\t<NavLink to={`/note/${note.id}`} {...props}>\n\t\t\t\t<h3>{note.title}</h3>\n\t\t\t</NavLink> */}\n\n\t\t\t\t\t<NavLink to={{ pathname: `/note/${props.note.id}`, props: props }}>\n\t\t\t\t\t\t<h3>{props.note.name}</h3>\n\t\t\t\t\t</NavLink>\n\n\t\t\t\t\t<div className=\"button-container\">\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\tModified on{' '}\n\t\t\t\t\t\t\t<span className=\"note-datemod\">\n\t\t\t\t\t\t\t\t{props.note.modified\n\t\t\t\t\t\t\t\t\t? props.note.modified.split('T', 1)[0]\n\t\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"btn-delete\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\thandleClickDelete(props.note.id, context.deleteNote, props);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t-\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</NotefulContext.Consumer>\n\t);\n};\nexport default NoteItem;\n","import React from 'react';\n\nimport NotefulContext from './NotefulContext';\n\nimport NoteItem from './NoteItem';\n\nclass NoteList extends React.Component {\n\t// const contextType is needed to then say this.context\n\tstatic contextType = NotefulContext;\n\n\trender() {\n\t\tconst { notes } = this.context;\n\n\t\t// if selected a folder, show only the notes in that folder\n\t\t// otherwise show all notes from all folders\n\t\tconst foldernotes = this.props.match.params.folderId\n\t\t\t? notes.filter(note => note.folderId === this.props.match.params.folderId)\n\t\t\t: notes;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"header-container\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<h2>Notes</h2>\n\t\t\t\t\t</span>\n\t\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<button className=\"btn-add\" onClick={this.props.togglePopup}>\n\t\t\t\t\t\t\t+\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t{foldernotes.length > 0 ? (\n\t\t\t\t\tfoldernotes.map(note => (\n\t\t\t\t\t\t<article key={note.id}>\n\t\t\t\t\t\t\t<div className=\"note\">\n\t\t\t\t\t\t\t\t{/*\n\t\t\t\t\t\t\t{...note}\n\t\t\t\t\t\t\tuse spread here b/c want whole note object, and get inside NoteItem via note.key\n\t\t\t\t\t\t\talternative is\n\t\t\t\t\t\t\tnote={note} and in NoteItem get via props.note.key\n\n\t\t\t\t\t\t\tQUESTION:\n\t\t\t\t\t\t\tpass {...this.props} so I can have the history object inside the NoteItem component to pass a new location to (as well as the location and match objects)\n\t\t\t\t\t\t\t*/}\n\t\t\t\t\t\t\t\t<NoteItem {...this.props} note={note} />\n\t\t\t\t\t\t\t\t{/* console.log('props', JSON.stringify(...note)) */}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</article>\n\t\t\t\t\t))\n\t\t\t\t) : (\n\t\t\t\t\t<article className=\"no-border\">\n\t\t\t\t\t\t<div className=\"note\">No notes in this folder.</div>\n\t\t\t\t\t</article>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default NoteList;\n","import React from 'react';\n\nimport { Route } from 'react-router-dom';\nimport './App.css';\n\nimport config from './config';\n\n// import dummyStore from './dummy-store';\nimport NotefulContext from './NotefulContext';\n\nimport Header from './Header';\nimport Footer from './Footer';\n\nimport FolderList from './FolderList';\nimport FolderItem from './FolderItem';\nimport NoteList from './NoteList';\nimport Note from './Note';\n\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: FolderList,\n\t\tsection: NoteList\n\t},\n\t{\n\t\tpath: '/folder/:folderId',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: FolderList,\n\t\tsection: NoteList\n\t},\n\t{\n\t\tpath: '/note/:noteId',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: FolderItem,\n\t\tsection: Note\n\t},\n\t{\n\t\tpath: '/:any/:any/:any',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: () => null,\n\t\tsection: () => 'Do not edit the  url!'\n\t}\n];\n\nexport default class App extends React.Component {\n\t// get context\n\tstatic contextType = NotefulContext;\n\n\t// set default state variable values\n\tstate = {\n\t\tfolders: [],\n\t\tnotes: [],\n\t\terrorFolders: null,\n\t\terrorNotes: null\n\t};\n\n\t// const [folders, setFolders] = useState({\n\t// \tfolders: [],\n\t// \terror: null\n\t//   });\n\n\t//   const [notes, setNotes] = useState({\n\t// \tnotes: [],\n\t// \terror: null\n\t//   });\n\n\ttogglePopup = () => {\n\t\talert('Feature not done yet.');\n\t};\n\n\tsetFolders = folders => {\n\t\tthis.setState({\n\t\t\tfolders,\n\t\t\terrorFolders: null\n\t\t});\n\t};\n\n\tsetNotes = notes => {\n\t\tthis.setState({\n\t\t\tnotes,\n\t\t\terrorNotes: null\n\t\t});\n\t};\n\n\t// deleteNotes updates state\n\t// and inside render context is updated with values from state\n\t// then context is used to display values in FolderList and NoteList\n\tdeleteNote = noteId => {\n\t\tconst newNotes = this.state.notes.filter(note => note.id !== noteId);\n\t\tthis.setState({\n\t\t\tnotes: newNotes\n\t\t});\n\t};\n\n\taddNote = note => {\n\t\tthis.setState({\n\t\t\tnotes: [...this.state.notes, note]\n\t\t});\n\t};\n\n\taddFolder = folder => {\n\t\tthis.setState({\n\t\t\tfolders: [...this.state.folders, folder]\n\t\t});\n\t};\n\n\t/*\n\t// NOTE NOTE NOTE\n\t// Pattern: every route is responsible for loading the data it needs from scratch\n\n\t// So the component rendering the /detail/:id route needs to fetch data for itself, including the correct id to use from the url, via the props React Router provides.\n\n\t*/\n\n\t/*\n\tIMPORTANT - using Route Render Prompts vs Component\n\tThis will show nothing in props\n\tconsole.log('*** App props = ', props);\n\n\tBUT you still need to pass {...props} in each Route if you want to use them later on\n\n\tTO WATCH:\n\thttps://tylermcginnis.com/react-router-pass-props-to-components/\n\n\tconst newId = parseInt()   ---> to convert url dynamic ids into numbers from strings\n\n\tused:\n\t<Link to={{ pathname: '/about', note: props }}\n\tin NoteItem.js\n\n\tREAD:\n\thttps://medium.com/@bopaiahmd.mca/how-to-pass-props-using-link-and-navlink-in-react-router-v4-75dc1d9507b4\n\n\t*/\n\n\tgetFolders = () => {\n\t\tfetch(config.API_FOLDERS, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tthrow new Error(res.status);\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(this.setFolders)\n\t\t\t// passes res to setFolders function\n\t\t\t// shortcut which equals .then(res => this.setFolders(res))\n\t\t\t.catch(error => this.setState({ errorFolders: error }));\n\t};\n\n\tgetNotes = () => {\n\t\tfetch(config.API_NOTES, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tthrow new Error(res.status);\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(this.setNotes)\n\t\t\t// passes res to setNotes function\n\t\t\t// shortcut which equals .then(res => this.setNotes(res))\n\t\t\t.catch(error => this.setState({ errorNotes: error }));\n\t};\n\n\t// get Folders & Notes when componentDidMount() {}\n\tcomponentDidMount() {\n\t\tthis.getFolders();\n\t\tthis.getNotes();\n\t}\n\n\trender() {\n\t\t// create object to update the values stored in NotefulContext\n\t\tconst contextValue = {\n\t\t\tnotes: this.state.notes,\n\t\t\tfolders: this.state.folders,\n\t\t\tdeleteNote: this.deleteNote,\n\t\t\taddNote: this.addNote,\n\t\t\taddFolder: this.addFolder\n\t\t};\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Header />\n\t\t\t\t{/* actually update the values stored in NotefulContext by passing contextValue into value\n\n\t\t\t\tUse the Provider to make values available to all children/grandchildren/subcomponents\n\n\t\t\t\tSee: https://reactjs.org/docs/context.html#caveats\n\n\t\t\t\t-- the code below will re-render all consumers every time the Provider re-renders because a new object is always created for valuethe code below will re-render all consumers every time the Provider re-renders because a new object is always created for value\n\t\t\t\t*/}\n\t\t\t\t<NotefulContext.Provider value={contextValue}>\n\t\t\t\t\t<main>\n\t\t\t\t\t\t{/* NOTE:\n\t\t\t\t\t\t used render props to pass togglePopup prop via route\n\t\t\t\t\t\tif did not want to pass props via route could just do\n\t\t\t\t\t\tcomponent={A}\n\t\t\t\t\t\t*/}\n\t\t\t\t\t\t<aside>\n\t\t\t\t\t\t\t{routes.map(({ path, exact, aside: A }) => (\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tkey={path}\n\t\t\t\t\t\t\t\t\tpath={path}\n\t\t\t\t\t\t\t\t\texact={exact}\n\t\t\t\t\t\t\t\t\trender={props => (\n\t\t\t\t\t\t\t\t\t\t<A {...props} togglePopup={this.togglePopup} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</aside>\n\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t{/* NOTE:\n\t\t\t\t\t\t used render props to pass togglePopup prop via route\n\t\t\t\t\t\t AND\n\t\t\t\t\t\t because wanted to pass location, match and history props to the component so that in the component I have access to the history object to push a new location into\n\t\t\t\t\t\t (THIS IS THE ONLY WAY)\n\n\t\t\t\t\t\tif did not want to pass props via route could just do\n\t\t\t\t\t\tcomponent={S}\n\t\t\t\t\t\t*/}\n\t\t\t\t\t\t\t{routes.map(({ path, exact, section: S }) => (\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tkey={path}\n\t\t\t\t\t\t\t\t\tpath={path}\n\t\t\t\t\t\t\t\t\texact={exact}\n\t\t\t\t\t\t\t\t\trender={props => (\n\t\t\t\t\t\t\t\t\t\t<S {...props} togglePopup={this.togglePopup} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</main>\n\t\t\t\t</NotefulContext.Provider>\n\n\t\t\t\t<Footer />\n\t\t\t</>\n\t\t);\n\t}\n}\n","import React, { useContext } from 'react';\nimport NoteItem from './NoteItem';\n\nimport NotefulContext from './NotefulContext';\n\nconst Note = props => {\n\tconsole.log('Note props = ', props);\n\tconsole.log('Note history = ', props.history);\n\t// console.log('Note params = ', props.match.params);\n\t// console.log('Note note id = ', props.match.params.noteId);\n\n\tconst context = useContext(NotefulContext);\n\tconst { notes } = context;\n\n\t// QUESTION\n\t// reloading the browser wipes the context from memory\n\t// so need to handle if user reloads the browser and its undefined\n\t// done by adding || {} here AND : '' for props.modified in NoteItem too\n\tconst note = notes.find(note => note.id === props.match.params.noteId) || {};\n\n\treturn (\n\t\t<article>\n\t\t\t<div className=\"note\">\n\t\t\t\t<NoteItem {...props} note={note} togglePopup={props.togglePopup} />\n\t\t\t\t<p className=\"note-content\">{note.content}</p>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n\nexport default Note;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}