{"version":3,"sources":["config.js","NotefulContext.js","Header/Header.js","Footer/Footer.js","FolderList/FolderError.js","FolderList/FolderList.js","FolderItem/FolderItem.js","NoteList/NoteError.js","NoteItem/NoteItem.js","NoteList/NoteList.js","Note/Note.js","ValidationError.js","AddFolder/AddFolder.js","AddNote/AddNote.js","EditFolder/EditFolder.js","EditNote/EditNote.js","App.js","index.js"],"names":["config","DATASOURCE","NOTES_ENDPOINT","FOLDERS_ENDPOINT","API_KEY","process","NotefulContext","React","createContext","folders","notes","deleteNote","addNote","addFolder","addErrorNotes","addErrorFolders","notesError","updateFolders","updateNotes","handleClickDeleteFolder","Header","props","to","Footer","href","target","rel","FolderError","state","hasError","error","errorInfo","this","children","Component","FolderList","folderId","contextType","useContext","parseInt","match","params","id_folder","className","undefined","onClick","map","folder","id","role","aria-label","name","filter","note","length","FolderItem","noteId","context","activeNote","find","activeFolder","history","goBack","NoteError","NoteItem","handleClickDelete","e","preventDefault","fetch","method","headers","authorization","then","res","ok","status","json","data","location","pathname","includes","push","catch","value","modified","toString","split","NoteList","foldernotes","Note","content","ValidationError","message","AddFolder","apiError","formValid","errorCount","errors","updateErrorCount","count","Object","values","forEach","val","setState","valid","validateField","err","trim","handleChange","event","handleClickCancel","handleSubmit","body","JSON","stringify","Authorization","onSubmit","noValidate","htmlFor","type","required","aria-required","aria-describedby","aria-invalid","onChange","disabled","AddNote","Date","UTC","EditFolder","resetFields","newFields","newFolder","Promise","reject","responseData","EditNote","newNote","routes","path","exact","header","aside","section","App","foldersError","deleteFolderId","newNotes","deleteFolder","newFolders","getNotes","setFolders","setNotes","getFolders","Error","updatedFolder","updatedNote","contextObj","Provider","A","component","S","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.b2bf1e85.chunk.js","sourcesContent":["// NOTE: You cannot override NODE_ENV manually\n// The built-in environment variable is called NODE_ENV. You can read it from process.env.NODE_ENV.  Its in the .env file.\n\n// TO SEE THE PRODUCTION version locally:\n// 1. run 'npm run build'\n// 2. then, 'serve -s build'\n\n// See https://create-react-app.dev/docs/adding-custom-environment-variables/\n\n/*\nWhen you run npm start, it is always equal to 'development', when you run npm test it is always equal to 'test', and when you run npm run build to make a production bundle, it is always equal to 'production'\n*/\n\n// hosted on Heroku using PostgreSQL db\nconst prod = {\n\tDATASOURCE: `postgresql`,\n\tNOTES_ENDPOINT: `https://asktami-noteful-api.herokuapp.com/api/notes`,\n\tFOLDERS_ENDPOINT: `https://asktami-noteful-api.herokuapp.com/api/folders`,\n\tAPI_KEY: process.env.REACT_APP_API_KEY,\n};\n\n// hosted locally using PostgreSQL db\nconst dev = {\n\tDATASOURCE: `postgresql`,\n\tNOTES_ENDPOINT: `http://localhost:8000/api/notes`,\n\tFOLDERS_ENDPOINT: `http://localhost:8000/api/folders`,\n\tAPI_KEY: process.env.REACT_APP_API_KEY,\n};\n\n// hosted locally using json db\n// export default {\n// \tDATASOURCE: `json`,\n// \tFOLDERS_ENDPOINT: `http://localhost:9090/folders`,\n// \tNOTES_ENDPOINT: `http://localhost:9090/notes`\n// };\n\n// hosted on github using json db\n// https://my-json-server.typicode.com/asktami/react-router-context-noteful\n\n// see documentation at\n// http://localhost:9090\n// see data at\n// http://localhost:9090/db\n\n// Default to dev if not set\nexport const config = process.env.NODE_ENV === 'production' ? prod : dev;\n","import React from 'react';\n\n// nothing else needs to be here because the context is defined in App.js,as contextObj - THIS IS ONLY TRUE IF NOT RUNNING TESTS\n\n// IF RUNNING TESTS then need to copy over references to objects and methods:\nconst NotefulContext = React.createContext({\n\tfolders: [],\n\tnotes: [],\n\tdeleteNote: () => {},\n\taddNote: () => {},\n\taddFolder: () => {},\n\taddErrorNotes: () => {},\n\taddErrorFolders: () => {},\n\tnotesError: () => {},\n\tupdateFolders: () => {},\n\tupdateNotes: () => {},\n\thandleClickDeleteFolder: () => {}\n});\n\nexport default NotefulContext;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n\treturn (\n\t\t<header>\n\t\t\t<span>\n\t\t\t\t<h1>\n\t\t\t\t\t<Link to=\"/\">Noteful</Link>\n\t\t\t\t</h1>\n\t\t\t</span>\n\t\t\t<span>\n\t\t\t\ta React app\n\t\t\t\t<br />\n\t\t\t\t(everything takes a couple of seconds to load)\n\t\t\t</span>\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = props => {\n\treturn (\n\t\t<footer>\n\t\t\t&copy; 2019{' '}\n\t\t\t<a\n\t\t\t\thref=\"http://www.asktami.com\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t>\n\t\t\t\tTami Williams\n\t\t\t</a>\n\t\t</footer>\n\t);\n};\n\nexport default Footer;\n","// Error Boundary component\n// NOTE: MUST use class\n\nimport React from 'react';\n\nclass FolderError extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromError(error) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { hasError: true };\n\t}\n\n\tcomponentDidCatch(error, errorInfo) {\n\t\t// You can also log the error to an error reporting service\n\t\t// logErrorToMyService(error, errorInfo);\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\t// You can render any custom fallback UI\n\t\t\treturn <h2>Could not display this folder.</h2>;\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\nexport default FolderError;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport FolderError from './FolderError';\nimport NotefulContext from '../NotefulContext';\nimport { config } from '../config';\n\nconst FolderList = (props) => {\n\tconst contextType = useContext(NotefulContext);\n\tconst { notes, folders, handleClickDeleteFolder } = contextType;\n\n\tlet folderId;\n\tif (config.DATASOURCE === 'postgresql') {\n\t\tfolderId = parseInt(props.match.params.id_folder);\n\t} else {\n\t\tfolderId = props.match.params.id_folder;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<>\n\t\t\t\t\t<h2>Folders</h2>\n\t\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t\t<NavLink to={'/add-folder'}>\n\t\t\t\t\t\t<button className=\"btn-add\">+</button>\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t\t{props.match.params.id_folder !== undefined ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<NavLink to={`/edit-folder/${props.match.params.id_folder}`}>\n\t\t\t\t\t\t\t\t<button className=\"btn-edit\">&#9998;</button>\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"btn-delete\"\n\t\t\t\t\t\t\t\tonClick={() => handleClickDeleteFolder(folderId, props)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t-\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : null}\n\t\t\t\t</>\n\t\t\t</header>\n\t\t\t<ul>\n\t\t\t\t{folders.map((folder) => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tkey={folder.id}\n\t\t\t\t\t\tclassName={folder.id === folderId ? ' active' : null}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FolderError>\n\t\t\t\t\t\t\t<NavLink to={`/folders/${folder.id}`}>\n\t\t\t\t\t\t\t\t<span role=\"img\" aria-label=\"Folder\">\n\t\t\t\t\t\t\t\t\t&#x1F4C2;\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t&nbsp;{folder.name}&nbsp;(\n\t\t\t\t\t\t\t\t{notes.filter((note) => note.id_folder === folder.id).length})\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</FolderError>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\nexport default FolderList;\n\n// to catch bugs\n// check that get a folders array that has id and name\n// this array is the \"folders\" variable coming from context\nFolderList.propTypes = {\n\tfolders: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t})\n\t),\n};\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport NotefulContext from '../NotefulContext';\nimport { config } from '../config';\n\nconst FolderItem = (props) => {\n\tconst context = useContext(NotefulContext);\n\tconst { folders, notes } = context;\n\n\tlet noteId;\n\n\t// use the selected noteId to\n\t// - use the notes object & get the id_folder\n\t// - from the folders object, use the id_folder to get the note's parent folder\n\n\tif (config.DATASOURCE === 'postgresql') {\n\t\tnoteId = parseInt(props.match.params.noteId);\n\t} else {\n\t\tnoteId = props.match.params.noteId;\n\t}\n\n\tconst activeNote = notes ? notes.find((note) => note.id === noteId) : '';\n\n\tif (!activeNote) return 'Sorry, no note found.';\n\n\tconst id_folder = activeNote.id_folder;\n\tconst activeFolder = folders.filter((folder) => folder.id === id_folder);\n\n\treturn (\n\t\t<>\n\t\t\t{!activeFolder\n\t\t\t\t? null\n\t\t\t\t: activeFolder.map((folder) => (\n\t\t\t\t\t\t<header key={folder.id}>\n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t{folder.name}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<NavLink to={`/edit-folder/${folder.id}`}>\n\t\t\t\t\t\t\t\t\t<button className=\"btn-edit\">&#9998;</button>\n\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<button className=\"btn-save\" onClick={props.history.goBack}>\n\t\t\t\t\t\t\t\t\tGo Back\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</header>\n\t\t\t\t  ))}\n\t\t</>\n\t);\n};\n\nexport default FolderItem;\n\n// to catch bugs\n// check that get a folders array that has id and name\n// this array is the \"folders\" variable coming from context\n// AND\n// check that get a notes array that has id, name, and modified\n// this array is the \"notes\" variable coming from context\nFolderItem.propTypes = {\n\tfolders: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t})\n\t),\n\tnotes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tmodified: PropTypes.instanceOf(Date).isRequired,\n\t\t})\n\t),\n};\n","// Error Boundary component\n// NOTE: MUST use class\n\nimport React from 'react';\n\nclass NoteError extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromError(error) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { hasError: true };\n\t}\n\n\tcomponentDidCatch(error, errorInfo) {\n\t\t// You can also log the error to an error reporting service\n\t\t// logErrorToMyService(error, errorInfo);\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\t// You can render any custom fallback UI\n\t\t\treturn <h2>Could not display this note.</h2>;\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\nexport default NoteError;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport { config } from '../config';\nimport NotefulContext from '../NotefulContext';\n\n// this function 1st deletes via the API, then from state\n// context.deleteNote = the update function, to update state in context\n// Using a CLASS instead of a functional component I do *** NOT *** have to\n//  pass in PROPS to get history, location and match (AND props.note.id) AND pass in CONTEXT for deleteNote function because there is no other way for the handleClickDelete function\n// - to know what is in Context\n// - to know history, location and match\n\nexport default class NoteItem extends React.Component {\n\t// need to grab NotefulContext (globals)\n\tstatic contextType = NotefulContext;\n\n\thandleClickDelete = (e) => {\n\t\te.preventDefault();\n\n\t\tconst noteId = this.props.note.id;\n\n\t\tfetch(config.NOTES_ENDPOINT + `/${noteId}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tauthorization: `Bearer ${config.API_KEY}`,\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\t// I think b/c cors, typecode gives a res.status = 404 and an EMPTY error object when try to delete note so,\n\t\t\t\tif (!res.ok || res.status === '404') {\n\t\t\t\t\t// get the error message from the response,\n\t\t\t\t\treturn res.json().then((error) => {\n\t\t\t\t\t\t// then throw it\n\t\t\t\t\t\t// throw res.status instead of error b/c error is an empty object\n\t\t\t\t\t\tthrow res.status;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\t// call the callback function when the request is successful\n\t\t\t\t// this is where the App component can remove it from state\n\t\t\t\t// ie. update the notes stored in state\n\t\t\t\t// which also updates the notes stored in context\n\t\t\t\tthis.context.deleteNote(noteId);\n\n\t\t\t\t// if in Note detail, return to show all notes list\n\t\t\t\tif (this.props.location.pathname.includes('/notes/')) {\n\t\t\t\t\tthis.props.history.push(`/`);\n\t\t\t\t}\n\n\t\t\t\t// if have selected a folder, need to refresh after delete a note\n\t\t\t\tif (this.props.location.pathname.includes('/folders/')) {\n\t\t\t\t\tthis.props.history.push(this.props.location.pathname);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// WORKAROUND to handle EMPTY error object and res.status = 404\n\t\t\t\tif (error !== 404) {\n\t\t\t\t\tthis.context.addErrorNotes(error);\n\t\t\t\t}\n\n\t\t\t\tif (error === 404) {\n\t\t\t\t\tthis.context.deleteNote(noteId);\n\n\t\t\t\t\t// if in Note detail, return to show all notes list\n\t\t\t\t\tif (this.props.location.pathname.includes('/notes/')) {\n\t\t\t\t\t\tthis.props.history.push(`/`);\n\t\t\t\t\t}\n\n\t\t\t\t\t// if have selected a folder, need to refresh after delete a note\n\t\t\t\t\tif (this.props.location.pathname.includes('/folders/')) {\n\t\t\t\t\t\tthis.props.history.push(this.props.location.pathname);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\trender() {\n\t\t// to see noteItem notesError in ui & trigger NoteError boundary:\n\t\t// this.context.addErrorNotes({ value: 'notesItemAPI errorMessage' });\n\t\treturn (\n\t\t\t<div className=\"note-item\">\n\t\t\t\t{this.context.notesError && (\n\t\t\t\t\t<p className=\"error\">{this.context.notesError.value}</p>\n\t\t\t\t)}\n\t\t\t\t{/*\n\t\t\tTHIS CAUSED A staticContent ERROR:\n\t\t\t<NavLink to={`/notes/${note.id}`} {...props}>\n\t\t\t\t<h3>{note.title}</h3>\n\t\t\t</NavLink> */}\n\t\t\t\t<NavLink\n\t\t\t\t\tto={{\n\t\t\t\t\t\tpathname: `/notes/${this.props.note.id}`,\n\t\t\t\t\t\tprops: this.props,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<h3>{this.props.note.name}</h3>\n\t\t\t\t</NavLink>\n\t\t\t\t<div className=\"button-container\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\tModified on{' '}\n\t\t\t\t\t\t<span className=\"note-datemod\">\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t{this.props.note.modified\n\t\t\t\t\t\t\t\t? this.props.note.modified.toString().split('T', 1)[0]\n\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<NavLink to={`/edit-note/${this.props.note.id}`}>\n\t\t\t\t\t\t\t<button className=\"btn-edit-note\">&#9998;</button>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn-delete-note\"\n\t\t\t\t\t\t\tonClick={this.handleClickDelete}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t-\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// to catch bugs\n// check that get a notes array that has id, name, and modified\n// this array is the \"notes\" variable coming from context\nNoteItem.propTypes = {\n\tnotes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tmodified: PropTypes.instanceOf(Date).isRequired,\n\t\t})\n\t),\n};\n\n// default values\n// ONLY for props that are NOT required\n// so do NOT create NoteItem.defaultProps\n// NoteItem.defaultProps = {\n// \tnote: {\n// \t\tid: '',\n// \t\tname: '',\n// \t\tmodified: ''\n// \t}\n// };\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport NoteError from './NoteError';\nimport NoteItem from '../NoteItem/NoteItem';\nimport NotefulContext from '../NotefulContext';\n\nimport { config } from '../config';\n\nconst NoteList = (props) => {\n\t// need to grab NotefulContext (globals)\n\tconst contextType = useContext(NotefulContext);\n\tconst { notes } = contextType;\n\n\tlet folderId;\n\n\t// if selected a folder, show only the notes in that folder\n\t// otherwise show all notes from all folders\n\tif (config.DATASOURCE === 'postgresql') {\n\t\tfolderId = parseInt(props.match.params.id_folder);\n\t} else {\n\t\tfolderId = props.match.params.id_folder;\n\t}\n\n\tconst foldernotes = props.match.params.id_folder\n\t\t? notes.filter((note) => note.id_folder === folderId)\n\t\t: notes;\n\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<h2>Notes</h2>\n\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t<NavLink\n\t\t\t\t\t// if just passing url:\n\t\t\t\t\t// to={'/add-note'}\n\n\t\t\t\t\t// to pass selected id_folder:\n\t\t\t\t\tto={{\n\t\t\t\t\t\tpathname: '/add-note',\n\t\t\t\t\t\tstate: { id_folder: props.match.params.id_folder },\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<button className=\"btn-add\">+</button>\n\t\t\t\t</NavLink>\n\t\t\t</header>\n\t\t\t{foldernotes.length > 0 ? (\n\t\t\t\tfoldernotes.map((note) => (\n\t\t\t\t\t<section key={note.id}>\n\t\t\t\t\t\t<NoteError>\n\t\t\t\t\t\t\t<div className=\"note\">\n\t\t\t\t\t\t\t\t{/*\n\t\t\t\t\t\t\t{...note}\n\t\t\t\t\t\t\tuse spread here IF want whole note object, and then get inside NoteItem via note.key\n\t\t\t\t\t\t\talternative is\n\t\t\t\t\t\t\tnote={note} and in NoteItem get via props.note.key\n\n\t\t\t\t\t\t\tNOTE:\n\t\t\t\t\t\t\tMUST pass {...props} to have the history, location, and match props inside NoteItem\n\t\t\t\t\t\t\t*/}\n\t\t\t\t\t\t\t\t<NoteItem note={note} {...props} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</NoteError>\n\t\t\t\t\t</section>\n\t\t\t\t))\n\t\t\t) : (\n\t\t\t\t<section className=\"no-border\">\n\t\t\t\t\t<div className=\"note\">No notes in this folder.</div>\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default NoteList;\n\n// to catch bugs\n// check that get a notes array that has id, name, and modified\n// this array is the \"notes\" variable coming from context\nNoteList.propTypes = {\n\tnotes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tmodified: PropTypes.instanceOf(Date).isRequired,\n\t\t})\n\t),\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport NoteItem from '../NoteItem/NoteItem';\n\nimport NotefulContext from '../NotefulContext';\nimport { config } from '../config';\n\nconst Note = (props) => {\n\t// need to grab NotefulContext (globals)\n\tconst context = useContext(NotefulContext);\n\tconst { notes } = context;\n\tlet noteId;\n\n\t// NOTE\n\t// reloading the browser wipes the context from memory\n\t// so need to handle if user reloads the browser and its undefined\n\t// done by adding || {} here AND : '' for props.modified in NoteItem too\n\n\tif (config.DATASOURCE === 'postgresql') {\n\t\tnoteId = parseInt(props.match.params.noteId);\n\t} else {\n\t\tnoteId = props.match.params.noteId;\n\t}\n\n\tconst note = notes.find((note) => note.id === noteId) || {};\n\n\treturn (\n\t\t<section>\n\t\t\t<div className=\"note\">\n\t\t\t\t<NoteItem {...props} note={note} />\n\t\t\t\t<p className=\"note-content\">{note.content}</p>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default Note;\n\n// to catch bugs\n// check that get a notes array that has id, name, content, and modified\n// this array is the \"notes\" variable coming from context\nNote.propTypes = {\n\tnotes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tid_folder: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tcontent: PropTypes.string.isRequired,\n\t\t\tmodified: PropTypes.instanceOf(Date).isRequired,\n\t\t})\n\t),\n};\n","import React from 'react';\n\nexport default function ValidationError(props) {\n\tif (props.message) {\n\t\treturn (\n\t\t\t<div className=\"error\" id={props.id}>\n\t\t\t\t{props.message}\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn <></>;\n}\n","import React from 'react';\nimport { config } from '../config';\n\nimport NotefulContext from '../NotefulContext';\n\nimport ValidationError from '../ValidationError';\n\nclass AddFolder extends React.Component {\n\tstatic contextType = NotefulContext;\n\n\tstate = {\n\t\tapiError: null,\n\t\tformValid: false,\n\t\terrorCount: null,\n\t\tname: '',\n\t\terrors: {\n\t\t\tname: 'You must enter a folder name',\n\t\t},\n\t};\n\n\tupdateErrorCount = () => {\n\t\tlet errors = this.state.errors;\n\t\tlet count = 0;\n\n\t\tObject.values(errors).forEach((val) => {\n\t\t\tif (val.length > 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({ errorCount: count });\n\t\tlet valid = count === 0 ? true : false;\n\t\tthis.setState({ formValid: valid });\n\t};\n\n\tvalidateField = (name, value) => {\n\t\tlet err = '';\n\n\t\tif (name === 'name') {\n\t\t\tif (value.trim().length === 0) {\n\t\t\t\terr = 'Folder name is required';\n\t\t\t} else if (value.trim().length < 3) {\n\t\t\t\terr = 'Folder name must be at least 3 characters long';\n\t\t\t}\n\t\t}\n\n\t\tconst { errors } = { ...this.state };\n\t\terrors[name] = err;\n\t\tthis.setState({ errors });\n\t};\n\n\thandleChange = (event) => {\n\t\tconst { name, value } = event.target;\n\t\tthis.setState({ [name]: value.trim() });\n\n\t\tthis.validateField(name, value);\n\t\tthis.updateErrorCount();\n\t};\n\n\thandleClickCancel = () => {\n\t\tthis.props.history.push('/');\n\t};\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\t// do NOT submit form if any errors\n\t\tif (this.state.errorCount > 0) return;\n\n\t\t// get the form fields from the event\n\t\tconst { name } = e.target;\n\t\tconst folder = {\n\t\t\tname: name.value,\n\t\t};\n\t\tthis.setState({ apiError: null });\n\n\t\tfetch(config.FOLDERS_ENDPOINT, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(folder),\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${config.API_KEY}`,\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\t// get the error message from the response,\n\t\t\t\t\treturn res.json().then((error) => {\n\t\t\t\t\t\t// then throw it\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\t// clear form values\n\t\t\t\tname.value = '';\n\n\t\t\t\tthis.context.addFolder(data);\n\n\t\t\t\t// select newly created folder:\n\t\t\t\tthis.props.history.push(`/folders/${data.id}`);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tthis.setState({ apiError: error });\n\t\t\t});\n\t};\n\trender() {\n\t\tconst { errors } = this.state;\n\n\t\tif (this.state.apiError) {\n\t\t\treturn <p className=\"error\">{this.state.apiError}</p>;\n\t\t}\n\n\t\treturn (\n\t\t\t<form className=\"addFolderForm\" onSubmit={this.handleSubmit} noValidate>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>New Folder</legend>\n\t\t\t\t\t<label htmlFor=\"name\">Name</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\taria-label=\"Folder Name\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-describedby=\"folderNameError\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.name.length > 0 && (\n\t\t\t\t\t\t<ValidationError message={errors.name} id={'folderNameError'} />\n\t\t\t\t\t)}\n\t\t\t\t\t<br />\n\t\t\t\t\t<button className=\"btn-cancel\" onClick={this.handleClickCancel}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>{' '}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn-save\"\n\t\t\t\t\t\tdisabled={this.state.formValid === false}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave Folder\n\t\t\t\t\t</button>\n\t\t\t\t</fieldset>\n\n\t\t\t\t{this.state.errorCount !== null ? (\n\t\t\t\t\t<p className=\"form-status\">\n\t\t\t\t\t\tForm is {this.state.formValid ? 'complete  ✅' : 'incomplete  ❌'}\n\t\t\t\t\t</p>\n\t\t\t\t) : null}\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default AddFolder;\n","import React from 'react';\nimport { config } from '../config';\n\nimport NotefulContext from '../NotefulContext';\n\nimport ValidationError from '../ValidationError';\n\nclass AddNote extends React.Component {\n\tstatic contextType = NotefulContext;\n\n\tstate = {\n\t\tapiError: null,\n\t\tformValid: false,\n\t\terrorCount: null,\n\t\tid_folder: this.props.location.state.id_folder || '', // use selected id_folder passed in via NavLink\n\t\tname: '',\n\t\tcontent: '',\n\t\terrors: {\n\t\t\tid_folder:\n\t\t\t\t!this.props.location.state.id_folder && 'You must select a folder', // error only if no id_folder passed in via NavLink\n\t\t\tname: 'You must enter a note title',\n\t\t\tcontent: 'You must enter a description',\n\t\t},\n\t};\n\n\t// to see addNote apiError in ui:\n\t/*\n\tstate = {\n\t\tapiError: 'addNote apiError errorMessage',\n\t\t...\n\t*/\n\n\tupdateErrorCount = () => {\n\t\tlet errors = this.state.errors;\n\t\tlet count = 0;\n\n\t\tObject.values(errors).forEach((val) => {\n\t\t\tif (val.length > 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({ errorCount: count });\n\t\tlet valid = count === 0 ? true : false;\n\t\tthis.setState({ formValid: valid });\n\t};\n\n\tvalidateField = (name, value) => {\n\t\tlet err = '';\n\n\t\tif (name === 'name') {\n\t\t\tif (value.length === 0) {\n\t\t\t\terr = 'Note title is required';\n\t\t\t} else if (value.length < 3) {\n\t\t\t\terr = 'Note title must be at least 3 characters long';\n\t\t\t}\n\t\t}\n\n\t\tif (name === 'id_folder') {\n\t\t\tif (value.length === 0) {\n\t\t\t\terr = 'You must select a folder';\n\t\t\t}\n\t\t}\n\n\t\tif (name === 'content') {\n\t\t\tif (value.length === 0) {\n\t\t\t\terr = 'You must enter a description';\n\t\t\t} else if (value.length < 5) {\n\t\t\t\terr = 'The description must be at least 5 characters long';\n\t\t\t}\n\t\t}\n\n\t\tconst { errors } = { ...this.state };\n\t\terrors[name] = err;\n\t\tthis.setState({ errors });\n\t};\n\n\thandleChange = (event) => {\n\t\tconst { name, value } = event.target;\n\t\tthis.setState({ [name]: value.trim() });\n\n\t\tthis.validateField(name, value.trim());\n\t\tthis.updateErrorCount();\n\t};\n\n\thandleClickCancel = () => {\n\t\tthis.props.history.push('/');\n\t};\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\t// this.updateErrorCount();\n\n\t\t// do NOT submit form if any errors\n\t\tif (this.state.errorCount > 0) return;\n\n\t\t// get the form fields from the event\n\t\tconst { id_folder, name, content } = e.target;\n\t\tconst note = {\n\t\t\tid_folder: id_folder.value,\n\t\t\tname: name.value,\n\t\t\tcontent: content.value,\n\t\t\tmodified: new Date(Date.UTC()),\n\t\t};\n\t\tthis.setState({ apiError: null });\n\n\t\tfetch(config.NOTES_ENDPOINT, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(note),\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${config.API_KEY}`,\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\t// get the error message from the response,\n\t\t\t\t\treturn res.json().then((error) => {\n\t\t\t\t\t\t// then throw it\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\t// clear form values\n\t\t\t\tid_folder.value = '';\n\t\t\t\tname.value = '';\n\t\t\t\tcontent.value = '';\n\n\t\t\t\tthis.context.addNote(data);\n\n\t\t\t\t// return to list:\n\t\t\t\tthis.props.history.push(`/folders/${id_folder.value}`);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tthis.setState({ apiError: error });\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst { errors } = this.state;\n\t\tconst folders = this.context.folders;\n\n\t\tif (this.state.apiError) {\n\t\t\treturn <p className=\"error\">{this.state.apiError}</p>;\n\t\t}\n\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>New Note</legend>\n\t\t\t\t\t<label htmlFor=\"id_folder\">Folder</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tid=\"id_folder\"\n\t\t\t\t\t\tname=\"id_folder\"\n\t\t\t\t\t\taria-label=\"Folder Id\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-describedby=\"id_folderError\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t\tvalue={this.state.id_folder}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"\">Select a folder</option>\n\t\t\t\t\t\t{folders.map((folder) => (\n\t\t\t\t\t\t\t<option key={folder.id} value={folder.id}>\n\t\t\t\t\t\t\t\t{folder.name}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t\t{errors.id_folder.length > 0 && (\n\t\t\t\t\t\t<ValidationError id={'id_folderError'} message={errors.id_folder} />\n\t\t\t\t\t)}\n\t\t\t\t\t<label htmlFor=\"name\">Title</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\taria-label=\"Note Title\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-describedby=\"noteTitleError\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.name.length > 0 && (\n\t\t\t\t\t\t<ValidationError id={'noteTitleError'} message={errors.name} />\n\t\t\t\t\t)}\n\t\t\t\t\t<label htmlFor=\"content\">Description</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tid=\"content\"\n\t\t\t\t\t\tname=\"content\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\taria-label=\"Note Description\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-describedby=\"noteDescriptionError\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.content.length > 0 && (\n\t\t\t\t\t\t<ValidationError\n\t\t\t\t\t\t\tid={'noteDescriptionError'}\n\t\t\t\t\t\t\tmessage={errors.content}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<br />\n\t\t\t\t\t<button className=\"btn-cancel\" onClick={this.handleClickCancel}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>{' '}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn-save\"\n\t\t\t\t\t\tdisabled={this.state.formValid === false}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave Note\n\t\t\t\t\t</button>\n\t\t\t\t</fieldset>\n\n\t\t\t\t{this.state.errorCount !== null ? (\n\t\t\t\t\t<p className=\"form-status\">\n\t\t\t\t\t\tForm is {this.state.formValid ? 'complete  ✅' : 'incomplete  ❌'}\n\t\t\t\t\t</p>\n\t\t\t\t) : null}\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default AddNote;\n","import React from 'react';\nimport { config } from '../config';\n\nimport NotefulContext from '../NotefulContext';\n\nimport ValidationError from '../ValidationError';\n\nclass EditFolder extends React.Component {\n\tstatic contextType = NotefulContext;\n\n\tstate = {\n\t\tapiError: null,\n\t\tformValid: true,\n\t\terrorCount: null,\n\t\tid: this.props.match.params.id_folder,\n\t\tname: '',\n\t\terrors: {\n\t\t\tname: '',\n\t\t},\n\t};\n\n\t// get folder to be updated\n\tcomponentDidMount() {\n\t\tconst { id_folder } = this.props.match.params;\n\t\tfetch(config.FOLDERS_ENDPOINT + `/${id_folder}`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tauthorization: `Bearer ${config.API_KEY}`,\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) return res.json().then((error) => Promise.reject(error));\n\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((responseData) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tid: responseData.id,\n\t\t\t\t\tname: responseData.name,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tthis.setState({ apiError: error });\n\t\t\t});\n\t}\n\n\tupdateErrorCount = () => {\n\t\tlet errors = this.state.errors;\n\t\tlet count = 0;\n\n\t\tObject.values(errors).forEach((val) => {\n\t\t\tif (val.length > 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({ errorCount: count });\n\t\tlet valid = count === 0 ? true : false;\n\t\tthis.setState({ formValid: valid });\n\t};\n\n\tvalidateField = (name, value) => {\n\t\tlet err = '';\n\n\t\tif (name === 'name') {\n\t\t\tif (value.trim().length === 0) {\n\t\t\t\terr = 'Folder name is required';\n\t\t\t} else if (value.trim().length < 3) {\n\t\t\t\terr = 'Folder name must be at least 3 characters long';\n\t\t\t}\n\t\t}\n\t\tconst { errors } = { ...this.state };\n\t\terrors[name] = err;\n\t\tthis.setState({ errors });\n\t};\n\n\thandleChange = (event) => {\n\t\tconst { name, value } = event.target;\n\t\tthis.setState({ [name]: value.trim() });\n\n\t\tthis.validateField(name, value);\n\t\tthis.updateErrorCount();\n\t};\n\n\thandleClickCancel = () => {\n\t\tthis.props.history.push('/');\n\t};\n\n\tresetFields = (newFields) => {\n\t\tthis.setState({\n\t\t\tid: newFields.id || '',\n\t\t\tname: newFields.name || '',\n\t\t});\n\t};\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\t// do NOT submit form if any errors\n\t\tif (this.state.errorCount > 0) return;\n\n\t\t// get the form fields from the event\n\t\tconst { id_folder } = this.props.match.params;\n\t\tconst { id, name } = this.state;\n\t\tconst newFolder = { id, name };\n\n\t\tthis.setState({ apiError: null });\n\n\t\tfetch(config.FOLDERS_ENDPOINT + `/${id_folder}`, {\n\t\t\tmethod: 'PATCH',\n\t\t\tbody: JSON.stringify(newFolder),\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tauthorization: `Bearer ${config.API_KEY}`,\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) return res.json().then((error) => Promise.reject(error));\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tthis.resetFields(newFolder);\n\t\t\t\tthis.context.updateFolders(newFolder);\n\t\t\t\t// return to list:\n\t\t\t\tthis.props.history.push('/');\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tthis.setState({ apiError: error });\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst { errors } = this.state;\n\n\t\tif (this.state.apiError) {\n\t\t\treturn <p className=\"error\">{this.state.apiError}</p>;\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<form\n\t\t\t\t\tclassName=\"editFolderForm\"\n\t\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t\t\tnoValidate\n\t\t\t\t>\n\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t<legend>Edit Folder</legend>\n\t\t\t\t\t\t<label htmlFor=\"name\">Name</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\taria-label=\"Folder Name\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\t\taria-describedby=\"folderNameError\"\n\t\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.name.length > 0 && (\n\t\t\t\t\t\t\t<ValidationError message={errors.name} id={'folderNameError'} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<button className=\"btn-cancel\" onClick={this.handleClickCancel}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>{' '}\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn-save\"\n\t\t\t\t\t\t\tdisabled={this.state.formValid === false}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSave Folder\n\t\t\t\t\t\t</button>{' '}\n\t\t\t\t\t\t{/* <button\n\t\t\t\t\t\t\tclassName=\"btn-delete-folder\"\n\t\t\t\t\t\t\tdisabled={this.state.formValid === false}\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\tthis.context.handleClickDeleteFolder(this.state.id, this.props)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</button> */}\n\t\t\t\t\t</fieldset>\n\t\t\t\t</form>\n\n\t\t\t\t{this.state.formValid ? (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn-delete-folder btn-position\"\n\t\t\t\t\t\tdisabled={this.state.formValid === false}\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tthis.context.handleClickDeleteFolder(this.state.id, this.props)\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</button>\n\t\t\t\t) : null}\n\n\t\t\t\t{this.state.errorCount !== null ? (\n\t\t\t\t\t<p className=\"form-status\">\n\t\t\t\t\t\tForm is {this.state.formValid ? 'complete  ✅' : 'incomplete  ❌'}\n\t\t\t\t\t</p>\n\t\t\t\t) : null}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default EditFolder;\n","import React from 'react';\nimport { config } from '../config';\n\nimport NotefulContext from '../NotefulContext';\n\nimport ValidationError from '../ValidationError';\n\nclass EditNote extends React.Component {\n\tstatic contextType = NotefulContext;\n\n\tstate = {\n\t\tapiError: null,\n\t\tformValid: true,\n\t\terrorCount: null,\n\t\tid: '',\n\t\tid_folder: '',\n\t\tname: '',\n\t\tcontent: '',\n\t\terrors: {\n\t\t\tid_folder: '',\n\t\t\tname: '',\n\t\t\tcontent: '',\n\t\t},\n\t};\n\n\t// to see addNote apiError in ui:\n\t/*\n\tstate = {\n\t\tapiError: 'addNote apiError errorMessage',\n\t\t...\n\t*/\n\n\t// get note to be updated\n\tcomponentDidMount() {\n\t\tconst { noteId } = this.props.match.params;\n\t\tfetch(config.NOTES_ENDPOINT + `/${noteId}`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tauthorization: `Bearer ${config.API_KEY}`,\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) return res.json().then((error) => Promise.reject(error));\n\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((responseData) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tid: responseData.id,\n\t\t\t\t\tname: responseData.name,\n\t\t\t\t\tid_folder: responseData.id_folder,\n\t\t\t\t\tcontent: responseData.content,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tthis.setState({ apiError: error });\n\t\t\t});\n\t}\n\n\tupdateErrorCount = () => {\n\t\tlet errors = this.state.errors;\n\t\tlet count = 0;\n\n\t\tObject.values(errors).forEach((val) => {\n\t\t\tif (val.length > 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({ errorCount: count });\n\t\tlet valid = count === 0 ? true : false;\n\t\tthis.setState({ formValid: valid });\n\t};\n\n\tvalidateField = (name, value) => {\n\t\tlet err = '';\n\n\t\tif (name === 'name') {\n\t\t\tif (value.length === 0) {\n\t\t\t\terr = 'Note title is required';\n\t\t\t} else if (value.length < 3) {\n\t\t\t\terr = 'Note title must be at least 3 characters long';\n\t\t\t}\n\t\t}\n\n\t\tif (name === 'id_folder') {\n\t\t\tif (value.length === 0) {\n\t\t\t\terr = 'You must select a folder';\n\t\t\t}\n\t\t}\n\n\t\tif (name === 'content') {\n\t\t\tif (value.length === 0) {\n\t\t\t\terr = 'You must enter a description';\n\t\t\t} else if (value.length < 5) {\n\t\t\t\terr = 'The description must be at least 5 characters long';\n\t\t\t}\n\t\t}\n\n\t\tconst { errors } = { ...this.state };\n\t\terrors[name] = err;\n\t\tthis.setState({ errors });\n\t};\n\n\thandleChange = (event) => {\n\t\tconst { name, value } = event.target;\n\t\tthis.setState({ [name]: value });\n\n\t\tthis.validateField(name, value);\n\t\tthis.updateErrorCount();\n\t};\n\n\thandleClickCancel = () => {\n\t\tthis.props.history.push('/');\n\t};\n\n\tresetFields = (newFields) => {\n\t\tthis.setState({\n\t\t\tid: newFields.id || '',\n\t\t\tname: newFields.name || '',\n\t\t\tcontent: newFields.content || '',\n\t\t\tid_folder: newFields.id_folder || '',\n\t\t});\n\t};\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\t// do NOT submit form if any errors\n\t\tif (this.state.errorCount > 0) return;\n\n\t\t// get the form fields to be updated\n\t\tconst { noteId } = this.props.match.params;\n\n\t\t// b/c id from datasource can be either text or number\n\t\tlet correct_type_noteId;\n\n\t\tif (config.DATASOURCE === 'postgresql') {\n\t\t\tcorrect_type_noteId = parseInt(this.state.id);\n\t\t} else {\n\t\t\tcorrect_type_noteId = this.state.id;\n\t\t}\n\n\t\tlet correct_type_folderId;\n\n\t\tif (config.DATASOURCE === 'postgresql') {\n\t\t\tcorrect_type_folderId = parseInt(this.state.id_folder);\n\t\t} else {\n\t\t\tcorrect_type_folderId = this.state.id_folder;\n\t\t}\n\n\t\tconst newNote = {\n\t\t\tid: correct_type_noteId,\n\t\t\tid_folder: correct_type_folderId,\n\t\t\tname: this.state.name,\n\t\t\tcontent: this.state.content,\n\t\t\tmodified: new Date(),\n\t\t};\n\n\t\tthis.setState({ apiError: null });\n\n\t\tfetch(config.NOTES_ENDPOINT + `/${noteId}`, {\n\t\t\tmethod: 'PATCH',\n\t\t\tbody: JSON.stringify(newNote),\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tauthorization: `Bearer ${config.API_KEY}`,\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) return res.json().then((error) => Promise.reject(error));\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tthis.resetFields(newNote);\n\t\t\t\tthis.context.updateNotes(newNote);\n\n\t\t\t\t// return to note folder\n\t\t\t\tthis.props.history.push(`/folders/${this.state.id_folder}`);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\terror(error);\n\t\t\t\tthis.setState({ apiError: error });\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst { errors, name, content, id_folder } = this.state;\n\t\tconst folders = this.context.folders;\n\n\t\tif (this.state.apiError) {\n\t\t\treturn <p className=\"error\">{this.state.apiError}</p>;\n\t\t}\n\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>Edit Note</legend>\n\t\t\t\t\t<label htmlFor=\"id_folder\">Folder</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tid=\"id_folder\"\n\t\t\t\t\t\tname=\"id_folder\"\n\t\t\t\t\t\taria-label=\"Folder Id\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-describedby=\"id_folderError\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t\tvalue={id_folder}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"\">Select a folder</option>\n\t\t\t\t\t\t{folders.map((folder) => (\n\t\t\t\t\t\t\t<option key={folder.id} value={folder.id}>\n\t\t\t\t\t\t\t\t{folder.name}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t\t{errors.id_folder.length > 0 && (\n\t\t\t\t\t\t<ValidationError id={'id_folderError'} message={errors.id_folder} />\n\t\t\t\t\t)}\n\t\t\t\t\t<label htmlFor=\"name\">Title</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\taria-label=\"Note Title\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-describedby=\"noteTitleError\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.name.length > 0 && (\n\t\t\t\t\t\t<ValidationError id={'noteTitleError'} message={errors.name} />\n\t\t\t\t\t)}\n\t\t\t\t\t<label htmlFor=\"content\">Description</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tid=\"content\"\n\t\t\t\t\t\tname=\"content\"\n\t\t\t\t\t\tvalue={content}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\taria-label=\"Note Description\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-describedby=\"noteDescriptionError\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.content.length > 0 && (\n\t\t\t\t\t\t<ValidationError\n\t\t\t\t\t\t\tid={'noteDescriptionError'}\n\t\t\t\t\t\t\tmessage={errors.content}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<br />\n\t\t\t\t\t<button className=\"btn-cancel\" onClick={this.handleClickCancel}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>{' '}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn-save\"\n\t\t\t\t\t\tdisabled={this.state.formValid === false}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave Note\n\t\t\t\t\t</button>\n\t\t\t\t</fieldset>\n\n\t\t\t\t{this.state.errorCount !== null ? (\n\t\t\t\t\t<p className=\"form-status\">\n\t\t\t\t\t\tForm is {this.state.formValid ? 'complete  ✅' : 'incomplete  ❌'}\n\t\t\t\t\t</p>\n\t\t\t\t) : null}\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default EditNote;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\n\nimport { config } from './config';\n\n// when using dummyStore text datafile:\n// import dummyStore from './dummy-store';\n\n// using React.Context:\nimport NotefulContext from './NotefulContext';\n\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\n\nimport FolderList from './FolderList/FolderList';\nimport FolderItem from './FolderItem/FolderItem';\nimport NoteList from './NoteList/NoteList';\nimport Note from './Note/Note';\n\nimport AddFolder from './AddFolder/AddFolder';\nimport AddNote from './AddNote/AddNote';\n\nimport EditFolder from './EditFolder/EditFolder';\nimport EditNote from './EditNote/EditNote';\n\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: FolderList,\n\t\tsection: NoteList,\n\t},\n\t{\n\t\tpath: '/folders/:id_folder',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: FolderList,\n\t\tsection: NoteList,\n\t},\n\t{\n\t\tpath: '/notes/:noteId',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: FolderItem,\n\t\tsection: Note,\n\t},\n\t{\n\t\tpath: '/add-folder',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: null,\n\t\tsection: AddFolder,\n\t},\n\t{\n\t\tpath: '/add-note',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: null,\n\t\tsection: AddNote,\n\t},\n\t{\n\t\tpath: '/edit-note/:noteId',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: null,\n\t\tsection: EditNote,\n\t},\n\t{\n\t\tpath: '/edit-folder/:id_folder',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: null,\n\t\tsection: EditFolder,\n\t},\n\t{\n\t\tpath: '/delete-folder/:id_folder',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: FolderList,\n\t\tsection: NoteList,\n\t},\n\t{\n\t\tpath: '/:any/:any/:any',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: () => null,\n\t\tsection: () => 'Do not edit the  url!',\n\t},\n];\n\nclass App extends React.Component {\n\t// set default state variable values with hooks\n\t// const [folders, setFolders] = useState([]);\n\t// const [notes, setNotes] = useState([]);\n\t// const [foldersError, setFoldersError] = useState(null);\n\t// const [notesError, setNotesError] = useState(null);\n\n\tstate = {\n\t\tfolders: [],\n\t\tnotes: [],\n\t\tfoldersError: null,\n\t\tnotesError: null,\n\t\tdeleteFolderId: null,\n\t};\n\n\t// to see foldersError in ui:\n\t// const [foldersError, setFoldersError] = useState({ value: 'foldersAPI errorMessage' });\n\n\t// to see notesError in ui:\n\t// const [notesError, setNotesError] = useState({value: 'notesAPI errorMessage'});\n\n\t// deleteNotes updates state\n\t// and inside render context is updated with values from state\n\t// then context is used to display values in FolderList and NoteList\n\t/*\n    After making successful a DELETE API request, you can use a this.state.notes.filter method along with setState to remove a note from state and update context.\n    */\n\tdeleteNote = (noteId) => {\n\t\tconst newNotes = this.state.notes.filter((note) => note.id !== noteId);\n\t\tthis.setState({ notes: newNotes });\n\t};\n\n\tdeleteFolder = (id_folder) => {\n\t\tconst newFolders = this.state.folders.filter(\n\t\t\t(folder) => folder.id !== id_folder\n\t\t);\n\t\tthis.setState({ folders: newFolders });\n\n\t\t// deleting a folder cascade deletes notes in the database\n\t\t// so need to update notes array in state\n\t\tthis.getNotes();\n\t};\n\n\taddNote = (note) => {\n\t\tthis.setState({ notes: [...this.state.notes, note] });\n\t};\n\n\taddFolder = (folder) => {\n\t\tthis.setState({ folders: [...this.state.folders, folder] });\n\t};\n\n\taddErrorNotes = (error) => {\n\t\tthis.setState({ notesError: error });\n\t};\n\n\taddErrorFolders = (error) => {\n\t\tthis.setState({ foldersError: error });\n\t};\n\n\t/*\n    // NOTE NOTE NOTE\n    // Pattern: every route is responsible for loading the data it needs from scratch\n\n    // So the component rendering the /detail/:id route needs to fetch data for itself, including the correct id to use from the url, via the props React Router provides.\n    */\n\n\tsetFolders = (folders) => {\n\t\tthis.setState({\n\t\t\tfolders,\n\t\t\terror: null,\n\t\t});\n\t};\n\tsetNotes = (notes) => {\n\t\tthis.setState({\n\t\t\tnotes,\n\t\t\terror: null,\n\t\t});\n\t};\n\n\tgetFolders = () => {\n\t\tfetch(config.FOLDERS_ENDPOINT, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${config.API_KEY}`,\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tthrow new Error(res.status);\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(this.setFolders)\n\t\t\t// passes res to setFolders function\n\t\t\t// shortcut which equals .then(res => this.setFolders(res))\n\t\t\t.catch((error) => this.setState({ foldersError: error }));\n\t};\n\n\tgetNotes = () => {\n\t\tfetch(config.NOTES_ENDPOINT, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${config.API_KEY}`,\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tthrow new Error(res.status);\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(this.setNotes)\n\t\t\t// passes res to setNotes function\n\t\t\t// shortcut which equals .then(res => this.setNotes(res))\n\t\t\t.catch((error) => this.setState({ notesError: error }));\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.getFolders();\n\t\tthis.getNotes();\n\t}\n\n\tupdateFolders = (updatedFolder) => {\n\t\tconst newFolders = this.state.folders.map((folder) =>\n\t\t\tfolder.id !== updatedFolder.id ? folder : updatedFolder\n\t\t);\n\n\t\tthis.setState({ folders: newFolders });\n\t};\n\n\tupdateNotes = (updatedNote) => {\n\t\tconst newNotes = this.state.notes.map((note) =>\n\t\t\tnote.id !== updatedNote.id ? note : updatedNote\n\t\t);\n\n\t\tthis.setState({ notes: newNotes });\n\t};\n\n\thandleClickDeleteFolder = (id_folder, props) => {\n\t\tfetch(config.FOLDERS_ENDPOINT + `/${id_folder}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${config.API_KEY}`,\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\t// I think b/c cors, typecode gives a res.status = 404 and an EMPTY error object when try to delete note so,\n\n\t\t\t\tif (!res.ok || res.status === '404') {\n\t\t\t\t\t// get the error message from the response,\n\t\t\t\t\treturn res.json().then((error) => {\n\t\t\t\t\t\t// then throw it\n\t\t\t\t\t\t// throw res.status instead of error b/c error is an empty object\n\t\t\t\t\t\tthrow res.status;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\t// call the callback function when the request is successful\n\t\t\t\t// this is where the App component can remove it from state\n\t\t\t\t// ie. update the folders stored in state\n\t\t\t\t// which also updates the folders stored in context\n\t\t\t\tthis.deleteFolder(id_folder);\n\n\t\t\t\t// remove id_folder from URL\n\t\t\t\tprops.history.push(`/`);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// WORKAROUND to handle EMPTY error object and res.status = 404\n\t\t\t\tif (error !== 404) {\n\t\t\t\t\tthis.addErrorFolders(error);\n\t\t\t\t}\n\n\t\t\t\tif (error === 404) {\n\t\t\t\t\tthis.deleteFolder(id_folder);\n\n\t\t\t\t\t// remove id_folder from URL\n\t\t\t\t\tprops.history.push(`/`);\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\trender() {\n\t\t// create object to update the values stored in NotefulContext\n\t\tconst contextObj = {\n\t\t\tnotes: this.state.notes,\n\t\t\tfolders: this.state.folders,\n\t\t\tdeleteNote: this.deleteNote,\n\t\t\taddNote: this.addNote,\n\t\t\taddFolder: this.addFolder,\n\t\t\taddErrorNotes: this.addErrorNotes,\n\t\t\taddErrorFolders: this.addErrorFolders,\n\t\t\tnotesError: this.notesError,\n\t\t\tupdateFolders: this.updateFolders,\n\t\t\tupdateNotes: this.updateNotes,\n\t\t\thandleClickDeleteFolder: this.handleClickDeleteFolder,\n\t\t};\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Header />\n\t\t\t\t{/* actually update the values stored in NotefulContext by passing contextObj into value\n\n                Use the Provider to make values available to all children/grandchildren/subcomponents\n\n                See: https://reactjs.org/docs/context.html#caveats\n\n                -- the code below will re-render all consumers every time the Provider re-renders because a new object is always created for value\n                */}\n\t\t\t\t<NotefulContext.Provider value={contextObj}>\n\t\t\t\t\t<main>\n\t\t\t\t\t\t<div className=\"aside\">\n\t\t\t\t\t\t\t{this.state.foldersError && (\n\t\t\t\t\t\t\t\t<p className=\"error\">{this.state.foldersError.value}</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{routes.map(({ path, exact, aside: A }) => (\n\t\t\t\t\t\t\t\t<Route key={path} path={path} exact={exact} component={A} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<article>\n\t\t\t\t\t\t\t{/* NOTE:\n                         CAN use render props to pass unfinishedMessage prop via route\n                         AND\n                         to pass location, match and history props to the component so that in the component I have access to the history object to push a new location into\n\n                                    render={props => (\n                                        <S\n                                        {...props}\n                                        unfinishedMessage={unfinishedMessage} />\n                                    )}\n\n                        can also pass unfinishedMessage via Context and do:\n                        component={S}\n\n\t\t\t\t\t\t---- ALTERNATIVE:\n\n\t\t\t\t\t\t{routes.map(({ path, exact, section: S }) => (\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tkey={path}\n\t\t\t\t\t\t\t\tpath={path}\n\t\t\t\t\t\t\t\texact={exact}\n\t\t\t\t\t\t\t\trender={props => <S {...props} />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\n                        */}\n\n\t\t\t\t\t\t\t{this.state.notesError && (\n\t\t\t\t\t\t\t\t<p className=\"error\">{this.state.notesError.value}</p>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{routes.map(({ path, exact, section: S }) => (\n\t\t\t\t\t\t\t\t<Route key={path} path={path} exact={exact} component={S} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</article>\n\t\t\t\t\t</main>\n\t\t\t\t</NotefulContext.Provider>\n\n\t\t\t\t<Footer />\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}