{"version":3,"sources":["config.js","NotefulContext.js","Header.js","Footer.js","FolderError.js","FolderList.js","FolderItem.js","NoteError.js","NoteItem.js","NoteList.js","Note.js","ValidationError.js","AddFolder.js","AddNote.js","App.js","index.js"],"names":["API_FOLDERS","API_NOTES","NotefulContext","React","createContext","Header","props","to","Footer","href","target","rel","FolderError","state","hasError","error","errorInfo","this","children","Component","FolderList","folders","useContext","className","map","folder","key","id","match","params","folderId","role","aria-label","name","FolderItem","context","notes","activeNote","find","note","noteId","activeFolder","filter","onClick","history","goBack","NoteError","NoteItem","handleClickDelete","e","preventDefault","alert","console","log","fetch","config","method","headers","then","res","ok","status","json","data","deleteNote","location","pathname","includes","push","catch","addErrorNotes","notesError","value","modified","toString","split","contextType","NoteList","foldernotes","length","Note","content","ValidationError","message","AddFolder","apiError","formValid","errorCount","errors","updateErrorCount","count","Object","values","forEach","val","setState","valid","validateField","err","trim","handleChange","event","handleClickCancel","handleSubmit","body","JSON","stringify","addFolder","onSubmit","noValidate","htmlFor","type","required","aria-required","aria-describedby","aria-invalid","onChange","disabled","AddNote","Date","addNote","routes","path","exact","header","aside","section","App","useState","setFolders","setNotes","foldersError","setFoldersError","setNotesError","useEffect","Error","contextObj","newNotes","Provider","A","component","S","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.6c4c8c15.chunk.js","sourcesContent":["// hosted on github\n// https://my-json-server.typicode.com/asktami/react-router-context-noteful\n\nexport default {\n\tAPI_FOLDERS: `https://my-json-server.typicode.com/asktami/react-router-context-noteful/folders`,\n\tAPI_NOTES: `https://my-json-server.typicode.com/asktami/react-router-context-noteful/notes`\n};\n\n// hosted locally:\n// export default {\n// \tAPI_FOLDERS: `http://localhost:9090/folders`,\n// \tAPI_NOTES: `http://localhost:9090/notes`\n// };\n\n// see documentation at\n// http://localhost:9090\n\n// see data at\n// http://localhost:9090/db\n","import React from 'react';\n\n// nothing else needs to be here because the context is defined in App.js, lines 159 - 166 and 180\nconst NotefulContext = React.createContext({});\n\nexport default NotefulContext;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n\treturn (\n\t\t<header>\n\t\t\t<span>\n\t\t\t\t<h1>\n\t\t\t\t\t<Link to=\"/\">Noteful</Link>\n\t\t\t\t</h1>\n\t\t\t</span>\n\t\t\t<span>a React app</span>\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = props => {\n\treturn (\n\t\t<footer>\n\t\t\t&copy; 2019{' '}\n\t\t\t<a\n\t\t\t\thref=\"http://www.asktami.com\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t>\n\t\t\t\tTami Williams\n\t\t\t</a>\n\t\t</footer>\n\t);\n};\n\nexport default Footer;\n","// Error Boundary component\n// NOTE: MUST use class\n\nimport React from 'react';\n\nclass FolderError extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromError(error) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { hasError: true };\n\t}\n\n\tcomponentDidCatch(error, errorInfo) {\n\t\t// You can also log the error to an error reporting service\n\t\t// logErrorToMyService(error, errorInfo);\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\t// You can render any custom fallback UI\n\t\t\treturn <h2>Could not display this folder.</h2>;\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\nexport default FolderError;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport FolderError from './FolderError';\nimport NotefulContext from './NotefulContext';\n\nconst FolderList = props => {\n\t// need to grab NotefulContext (globals)\n\tconst contextType = useContext(NotefulContext);\n\tconst { folders } = contextType;\n\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<h2>Folders</h2>\n\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t<NavLink to={'/add-folder'}>\n\t\t\t\t\t<button className=\"btn-add\">+</button>\n\t\t\t\t</NavLink>\n\t\t\t</header>\n\t\t\t<ul>\n\t\t\t\t{folders.map(folder => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tkey={folder.id}\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tfolder.id === props.match.params.folderId ? ' active' : null\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<FolderError>\n\t\t\t\t\t\t\t<NavLink to={`/folder/${folder.id}`}>\n\t\t\t\t\t\t\t\t<span role=\"img\" aria-label=\"Folder\">\n\t\t\t\t\t\t\t\t\t&#x1F4C2;\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t&nbsp;{folder.name}\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</FolderError>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\nexport default FolderList;\n\n// to catch bugs\n// check that get a folders array that has id and name\n// this array is the \"folders\" variable coming from context\nFolderList.propTypes = {\n\tfolders: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired\n\t\t})\n\t)\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport NotefulContext from './NotefulContext';\n\nconst FolderItem = props => {\n\tconst context = useContext(NotefulContext);\n\tconst { folders, notes } = context;\n\n\t// use the selected noteId to\n\t// - use the notes object & get the folderId\n\t// - from the folders object, use the folderId to get the note's parent folder\n\n\tconst activeNote = notes\n\t\t? notes.find(note => note.id === props.match.params.noteId)\n\t\t: '';\n\n\tif (!activeNote) return 'Sorry, no note found.';\n\n\tconst folderId = activeNote.folderId;\n\tconst activeFolder = folders.filter(folder => folder.id === folderId);\n\n\treturn (\n\t\t<>\n\t\t\t{!activeFolder\n\t\t\t\t? null\n\t\t\t\t: activeFolder.map(folder => (\n\t\t\t\t\t\t<header key={folder.id}>\n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t{folder.name}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<button className=\"btn-save\" onClick={props.history.goBack}>\n\t\t\t\t\t\t\t\t\tGo Back\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</header>\n\t\t\t\t  ))}\n\t\t</>\n\t);\n};\n\nexport default FolderItem;\n\n// to catch bugs\n// check that get a folders array that has id and name\n// this array is the \"folders\" variable coming from context\n// AND\n// check that get a notes array that has id, name, and modified\n// this array is the \"notes\" variable coming from context\nFolderItem.propTypes = {\n\tfolders: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired\n\t\t})\n\t),\n\tnotes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tmodified: PropTypes.instanceOf(Date).isRequired\n\t\t})\n\t)\n};\n","// Error Boundary component\n// NOTE: MUST use class\n\nimport React from 'react';\n\nclass NoteError extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t};\n\t}\n\n\tstatic getDerivedStateFromError(error) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { hasError: true };\n\t}\n\n\tcomponentDidCatch(error, errorInfo) {\n\t\t// You can also log the error to an error reporting service\n\t\t// logErrorToMyService(error, errorInfo);\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\t// You can render any custom fallback UI\n\t\t\treturn <h2>Could not display this note.</h2>;\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\nexport default NoteError;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport config from './config';\nimport NotefulContext from './NotefulContext';\n\n// this function 1st deletes via the API, then from state\n// context.deleteNote = the update function, to update state in context\n// Using a CLASS instead of a functional component I do *** NOT *** have to\n//  pass in PROPS to get history, location and match (AND props.note.id) AND pass in CONTEXT for deleteNote function because there is no other way for the handleClickDelete function\n// - to know what is in Context\n// - to know history, location and match\n\nexport default class NoteItem extends React.Component {\n\t// need to grab NotefulContext (globals)\n\tstatic contextType = NotefulContext;\n\n\thandleClickDelete = e => {\n\t\te.preventDefault();\n\t\talert('doing delete note');\n\t\tconsole.log('doing delete note');\n\n\t\tconst noteId = this.props.note.id;\n\n\t\tfetch(config.API_NOTES + `/${noteId}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\t// I think b/c cors, typecode gives a res.status = 404 and an EMPTY error object when try to delete note so,\n\n\t\t\t\tif (!res.ok || res.status === '404') {\n\t\t\t\t\tconsole.log('debug got to res not ok');\n\t\t\t\t\tconsole.log('res.status = ', res.status);\n\n\t\t\t\t\t// get the error message from the response,\n\t\t\t\t\treturn res.json().then(error => {\n\t\t\t\t\t\t// then throw it\n\t\t\t\t\t\t// throw res.status instead of error b/c error is an empty object\n\t\t\t\t\t\tthrow res.status;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\t// call the callback function when the request is successful\n\t\t\t\t// this is where the App component can remove it from state\n\t\t\t\t// ie. update the notes stored in state\n\t\t\t\t// which also updates the notes stored in context\n\t\t\t\tthis.context.deleteNote(noteId);\n\n\t\t\t\t// if in Note detail, return to show all notes list\n\t\t\t\tif (this.props.location.pathname.includes('/note/')) {\n\t\t\t\t\tthis.props.history.push(`/`);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.context.addErrorNotes(error);\n\t\t\t\tconsole.log('debug got to catch');\n\n\t\t\t\t// WORKAROUND to handle EMPTY error object and res.status = 404\n\t\t\t\tif (error === 404) {\n\t\t\t\t\tthis.context.deleteNote(noteId);\n\t\t\t\t\tconsole.log('workaround b/c 404 error');\n\n\t\t\t\t\t// if in Note detail, return to show all notes list\n\t\t\t\t\tif (this.props.location.pathname.includes('/note/')) {\n\t\t\t\t\t\tthis.props.history.push(`/`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\trender() {\n\t\t// to see noteItem notesError in ui & trigger NoteError boundary:\n\t\t// this.context.addErrorNotes({ value: 'notesItemAPI errorMessage' });\n\n\t\treturn (\n\t\t\t<div className=\"note-item\">\n\t\t\t\t{this.context.notesError && (\n\t\t\t\t\t<p className=\"error\">{this.context.notesError.value}</p>\n\t\t\t\t)}\n\t\t\t\t{/*\n\t\t\tTHIS CAUSED A staticContent ERROR:\n\t\t\t<NavLink to={`/note/${note.id}`} {...props}>\n\t\t\t\t<h3>{note.title}</h3>\n\t\t\t</NavLink> */}\n\t\t\t\t<NavLink\n\t\t\t\t\tto={{\n\t\t\t\t\t\tpathname: `/note/${this.props.note.id}`,\n\t\t\t\t\t\tprops: this.props\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<h3>{this.props.note.name}</h3>\n\t\t\t\t</NavLink>\n\t\t\t\t<div className=\"button-container\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\tHELLO Modified on{' '}\n\t\t\t\t\t\t<span className=\"note-datemod\">\n\t\t\t\t\t\t\t{this.props.note.modified\n\t\t\t\t\t\t\t\t? this.props.note.modified.toString().split('T', 1)[0]\n\t\t\t\t\t\t\t\t: ''}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<button className=\"btn-delete\" onClick={this.handleClickDelete}>\n\t\t\t\t\t\t\t-\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n// to catch bugs\n// check that get a notes array that has id, name, and modified\n// this array is the \"notes\" variable coming from context\nNoteItem.propTypes = {\n\tnotes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tmodified: PropTypes.instanceOf(Date).isRequired\n\t\t})\n\t)\n};\n\n// default values\n// ONLY for props that are NOT required\n// so do NOT create NoteItem.defaultProps\n// NoteItem.defaultProps = {\n// \tnote: {\n// \t\tid: '',\n// \t\tname: '',\n// \t\tmodified: ''\n// \t}\n// };\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport NoteError from './NoteError';\n\nimport NotefulContext from './NotefulContext';\n\nimport NoteItem from './NoteItem';\n\nconst NoteList = props => {\n\t// need to grab NotefulContext (globals)\n\tconst contextType = useContext(NotefulContext);\n\tconst { notes } = contextType;\n\n\t// if selected a folder, show only the notes in that folder\n\t// otherwise show all notes from all folders\n\tconst foldernotes = props.match.params.folderId\n\t\t? notes.filter(note => note.folderId === props.match.params.folderId)\n\t\t: notes;\n\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<h2>Notes</h2>\n\t\t\t\t&nbsp;&nbsp;\n\t\t\t\t<NavLink\n\t\t\t\t\t// if just passing url:\n\t\t\t\t\t// to={'/add-note'}\n\n\t\t\t\t\t// to pass selected folderId:\n\t\t\t\t\tto={{\n\t\t\t\t\t\tpathname: '/add-note',\n\t\t\t\t\t\tstate: { folderId: props.match.params.folderId }\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<button className=\"btn-add\">+</button>\n\t\t\t\t</NavLink>\n\t\t\t</header>\n\t\t\t{foldernotes.length > 0 ? (\n\t\t\t\tfoldernotes.map(note => (\n\t\t\t\t\t<section key={note.id}>\n\t\t\t\t\t\t<NoteError>\n\t\t\t\t\t\t\t<div className=\"note\">\n\t\t\t\t\t\t\t\t{/*\n\t\t\t\t\t\t\t{...note}\n\t\t\t\t\t\t\tuse spread here IF want whole note object, and then get inside NoteItem via note.key\n\t\t\t\t\t\t\talternative is\n\t\t\t\t\t\t\tnote={note} and in NoteItem get via props.note.key\n\n\t\t\t\t\t\t\tNOTE:\n\t\t\t\t\t\t\tMUST pass {...props} to have the history, location, and match props inside NoteItem\n\t\t\t\t\t\t\t*/}\n\t\t\t\t\t\t\t\t<NoteItem note={note} {...props} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</NoteError>\n\t\t\t\t\t</section>\n\t\t\t\t))\n\t\t\t) : (\n\t\t\t\t<section className=\"no-border\">\n\t\t\t\t\t<div className=\"note\">No notes in this folder.</div>\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default NoteList;\n\n// to catch bugs\n// check that get a notes array that has id, name, and modified\n// this array is the \"notes\" variable coming from context\nNoteList.propTypes = {\n\tnotes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tmodified: PropTypes.instanceOf(Date).isRequired\n\t\t})\n\t)\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport NoteItem from './NoteItem';\n\nimport NotefulContext from './NotefulContext';\n\nconst Note = props => {\n\t// need to grab NotefulContext (globals)\n\tconst context = useContext(NotefulContext);\n\tconst { notes } = context;\n\n\t// NOTE\n\t// reloading the browser wipes the context from memory\n\t// so need to handle if user reloads the browser and its undefined\n\t// done by adding || {} here AND : '' for props.modified in NoteItem too\n\tconst note = notes.find(note => note.id === props.match.params.noteId) || {};\n\n\treturn (\n\t\t<section>\n\t\t\t<div className=\"note\">\n\t\t\t\t<NoteItem {...props} note={note} />\n\t\t\t\t<p className=\"note-content\">{note.content}</p>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default Note;\n\n// to catch bugs\n// check that get a notes array that has id, name, content, and modified\n// this array is the \"notes\" variable coming from context\nNote.propTypes = {\n\tnotes: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.string.isRequired,\n\t\t\tfolderId: PropTypes.string.isRequired,\n\t\t\tname: PropTypes.string.isRequired,\n\t\t\tcontent: PropTypes.string.isRequired,\n\t\t\tmodified: PropTypes.instanceOf(Date).isRequired\n\t\t})\n\t)\n};\n","import React from 'react';\n\nexport default function ValidationError(props) {\n\tif (props.message) {\n\t\treturn (\n\t\t\t<div className=\"error\" id={props.id}>\n\t\t\t\t{props.message}\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn <></>;\n}\n","import React from 'react';\nimport config from './config';\n\nimport NotefulContext from './NotefulContext';\n\nimport ValidationError from './ValidationError';\n\nclass AddFolder extends React.Component {\n\tstatic contextType = NotefulContext;\n\n\tstate = {\n\t\tapiError: null,\n\t\tformValid: false,\n\t\terrorCount: null,\n\t\tname: '',\n\t\terrors: {\n\t\t\tname: 'You must enter a folder name'\n\t\t}\n\t};\n\n\tupdateErrorCount = () => {\n\t\tlet errors = this.state.errors;\n\t\tlet count = 0;\n\n\t\tObject.values(errors).forEach(val => {\n\t\t\tif (val.length > 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({ errorCount: count });\n\t\tlet valid = count === 0 ? true : false;\n\t\tthis.setState({ formValid: valid });\n\t};\n\n\tvalidateField = (name, value) => {\n\t\tlet err = '';\n\n\t\tif (name === 'name') {\n\t\t\tif (value.trim().length === 0) {\n\t\t\t\terr = 'Folder name is required';\n\t\t\t} else if (value.trim().length < 3) {\n\t\t\t\terr = 'Folder name must be at least 3 characters long';\n\t\t\t}\n\t\t}\n\n\t\tconst { errors } = { ...this.state };\n\t\terrors[name] = err;\n\t\tthis.setState({ errors });\n\t};\n\n\thandleChange = event => {\n\t\tconst { name, value } = event.target;\n\t\tthis.setState({ [name]: value.trim() });\n\n\t\tthis.validateField(name, value);\n\t\tthis.updateErrorCount();\n\t};\n\n\thandleClickCancel = () => {\n\t\tthis.props.history.push('/');\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\n\t\t// do NOT submit form if any errors\n\t\tif (this.state.errorCount > 0) return;\n\n\t\t// get the form fields from the event\n\t\tconst { name } = e.target;\n\t\tconst folder = {\n\t\t\tname: name.value\n\t\t};\n\t\tthis.setState({ apiError: null });\n\n\t\tfetch(config.API_FOLDERS, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(folder),\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\t// get the error message from the response,\n\t\t\t\t\treturn res.json().then(error => {\n\t\t\t\t\t\t// then throw it\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\t// clear form values\n\t\t\t\tname.value = '';\n\n\t\t\t\tthis.context.addFolder(data);\n\n\t\t\t\t// return to list:\n\t\t\t\tthis.props.history.push('/');\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.setState({ apiError: error });\n\t\t\t});\n\t};\n\trender() {\n\t\tconst { errors } = this.state;\n\n\t\tif (this.state.apiError) {\n\t\t\treturn <p className=\"error\">{this.state.apiError}</p>;\n\t\t}\n\n\t\treturn (\n\t\t\t<form className=\"addFolderForm\" onSubmit={this.handleSubmit} noValidate>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>New Folder</legend>\n\t\t\t\t\t<label htmlFor=\"name\">Name</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\taria-label=\"Folder Name\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-describedby=\"folderNameError\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.name.length > 0 && (\n\t\t\t\t\t\t<ValidationError message={errors.name} id={'folderNameError'} />\n\t\t\t\t\t)}\n\t\t\t\t\t<br />\n\t\t\t\t\t<button className=\"btn-cancel\" onClick={this.handleClickCancel}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>{' '}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn-save\"\n\t\t\t\t\t\tdisabled={this.state.formValid === false}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave Folder\n\t\t\t\t\t</button>\n\t\t\t\t</fieldset>\n\n\t\t\t\t{this.state.errorCount !== null ? (\n\t\t\t\t\t<p className=\"form-status\">\n\t\t\t\t\t\tForm is {this.state.formValid ? 'complete  ✅' : 'incomplete  ❌'}\n\t\t\t\t\t</p>\n\t\t\t\t) : null}\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default AddFolder;\n","import React from 'react';\nimport config from './config';\n\nimport NotefulContext from './NotefulContext';\n\nimport ValidationError from './ValidationError';\n\nclass AddNote extends React.Component {\n\tstatic contextType = NotefulContext;\n\n\tstate = {\n\t\tapiError: null,\n\t\tformValid: false,\n\t\terrorCount: null,\n\t\tfolderId: this.props.location.state.folderId || '', // use selected folderId passed in via NavLink\n\t\tname: '',\n\t\tcontent: '',\n\t\terrors: {\n\t\t\tfolderId:\n\t\t\t\t!this.props.location.state.folderId && 'You must select a folder', // error only if no folderId passed in via NavLink\n\t\t\tname: 'You must enter a note title',\n\t\t\tcontent: 'You must enter a description'\n\t\t}\n\t};\n\n\t// to see addNote apiError in ui:\n\t/*\n\tstate = {\n\t\tapiError: 'addNote apiError errorMessage',\n\t\t...\n\t*/\n\n\tupdateErrorCount = () => {\n\t\tlet errors = this.state.errors;\n\t\tlet count = 0;\n\n\t\tObject.values(errors).forEach(val => {\n\t\t\tif (val.length > 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({ errorCount: count });\n\t\tlet valid = count === 0 ? true : false;\n\t\tthis.setState({ formValid: valid });\n\t};\n\n\tvalidateField = (name, value) => {\n\t\tlet err = '';\n\n\t\tif (name === 'name') {\n\t\t\tif (value.length === 0) {\n\t\t\t\terr = 'Note title is required';\n\t\t\t} else if (value.length < 3) {\n\t\t\t\terr = 'Note title must be at least 3 characters long';\n\t\t\t}\n\t\t}\n\n\t\tif (name === 'folderId') {\n\t\t\tif (value.length === 0) {\n\t\t\t\terr = 'You must select a folder';\n\t\t\t}\n\t\t}\n\n\t\tif (name === 'content') {\n\t\t\tif (value.length === 0) {\n\t\t\t\terr = 'You must enter a description';\n\t\t\t} else if (value.length < 5) {\n\t\t\t\terr = 'The description must be at least 5 characters long';\n\t\t\t}\n\t\t}\n\n\t\tconst { errors } = { ...this.state };\n\t\terrors[name] = err;\n\t\tthis.setState({ errors });\n\t};\n\n\thandleChange = event => {\n\t\tconst { name, value } = event.target;\n\t\tthis.setState({ [name]: value.trim() });\n\n\t\tthis.validateField(name, value.trim());\n\t\tthis.updateErrorCount();\n\t};\n\n\thandleClickCancel = () => {\n\t\tthis.props.history.push('/');\n\t};\n\n\thandleSubmit = e => {\n\t\te.preventDefault();\n\t\t// this.updateErrorCount();\n\n\t\t// do NOT submit form if any errors\n\t\tif (this.state.errorCount > 0) return;\n\n\t\t// get the form fields from the event\n\t\tconst { folderId, name, content } = e.target;\n\t\tconst note = {\n\t\t\tfolderId: folderId.value,\n\t\t\tname: name.value,\n\t\t\tcontent: content.value,\n\t\t\tmodified: new Date()\n\t\t};\n\t\tthis.setState({ apiError: null });\n\n\t\tfetch(config.API_NOTES, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(note),\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\t// get the error message from the response,\n\t\t\t\t\treturn res.json().then(error => {\n\t\t\t\t\t\t// then throw it\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\t// clear form values\n\t\t\t\tfolderId.value = '';\n\t\t\t\tname.value = '';\n\t\t\t\tcontent.value = '';\n\n\t\t\t\tthis.context.addNote(data);\n\n\t\t\t\t// return to list:\n\t\t\t\tthis.props.history.push('/');\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.setState({ apiError: error });\n\t\t\t});\n\t};\n\n\trender() {\n\t\tconst { errors } = this.state;\n\t\tconst folders = this.context.folders;\n\n\t\t// selected folderId passed in via NavLink:\n\t\t// console.log(\n\t\t// \t'AddNote props.location.state.folderId = ',\n\t\t// \tthis.props.location.state.folderId\n\t\t// );\n\n\t\tif (this.state.apiError) {\n\t\t\treturn <p className=\"error\">{this.state.apiError}</p>;\n\t\t}\n\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend>New Note</legend>\n\t\t\t\t\t<label htmlFor=\"folderId\">Folder</label>\n\t\t\t\t\t<select\n\t\t\t\t\t\tid=\"folderId\"\n\t\t\t\t\t\tname=\"folderId\"\n\t\t\t\t\t\taria-label=\"Folder Id\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-describedby=\"folderIdError\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t\tvalue={this.state.folderId}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"\">Select a folder</option>\n\t\t\t\t\t\t{folders.map(folder => (\n\t\t\t\t\t\t\t<option key={folder.id} value={folder.id}>\n\t\t\t\t\t\t\t\t{folder.name}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t\t{errors.folderId.length > 0 && (\n\t\t\t\t\t\t<ValidationError id={'folderIdError'} message={errors.folderId} />\n\t\t\t\t\t)}\n\t\t\t\t\t<label htmlFor=\"name\">Title</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\taria-label=\"Note Title\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-describedby=\"noteTitleError\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.name.length > 0 && (\n\t\t\t\t\t\t<ValidationError id={'noteTitleError'} message={errors.name} />\n\t\t\t\t\t)}\n\t\t\t\t\t<label htmlFor=\"content\">Description</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tid=\"content\"\n\t\t\t\t\t\tname=\"content\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\taria-label=\"Note Description\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\taria-required=\"true\"\n\t\t\t\t\t\taria-describedby=\"noteDescriptionError\"\n\t\t\t\t\t\taria-invalid=\"true\"\n\t\t\t\t\t/>\n\t\t\t\t\t{errors.content.length > 0 && (\n\t\t\t\t\t\t<ValidationError\n\t\t\t\t\t\t\tid={'noteDescriptionError'}\n\t\t\t\t\t\t\tmessage={errors.content}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<br />\n\t\t\t\t\t<button className=\"btn-cancel\" onClick={this.handleClickCancel}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>{' '}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn-save\"\n\t\t\t\t\t\tdisabled={this.state.formValid === false}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave Note\n\t\t\t\t\t</button>\n\t\t\t\t</fieldset>\n\n\t\t\t\t{this.state.errorCount !== null ? (\n\t\t\t\t\t<p className=\"form-status\">\n\t\t\t\t\t\tForm is {this.state.formValid ? 'complete  ✅' : 'incomplete  ❌'}\n\t\t\t\t\t</p>\n\t\t\t\t) : null}\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default AddNote;\n","import React, { useState, useEffect } from 'react';\n\nimport { Route } from 'react-router-dom';\nimport './App.css';\n\nimport config from './config';\n\n// when using dummyStore text datafile:\n// import dummyStore from './dummy-store';\n\n// using React.Context:\nimport NotefulContext from './NotefulContext';\n\nimport Header from './Header';\nimport Footer from './Footer';\n\nimport FolderList from './FolderList';\nimport FolderItem from './FolderItem';\nimport NoteList from './NoteList';\nimport Note from './Note';\n\nimport AddFolder from './AddFolder';\nimport AddNote from './AddNote';\n\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: FolderList,\n\t\tsection: NoteList\n\t},\n\t{\n\t\tpath: '/folder/:folderId',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: FolderList,\n\t\tsection: NoteList\n\t},\n\t{\n\t\tpath: '/note/:noteId',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: FolderItem,\n\t\tsection: Note\n\t},\n\t{\n\t\tpath: '/add-folder',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: null,\n\t\tsection: AddFolder\n\t},\n\t{\n\t\tpath: '/add-note',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: null,\n\t\tsection: AddNote\n\t},\n\t{\n\t\tpath: '/:any/:any/:any',\n\t\texact: true,\n\t\theader: Header,\n\t\taside: () => null,\n\t\tsection: () => 'Do not edit the  url!'\n\t}\n];\n\nconst App = props => {\n\t// // set default state variable values\n\t// setting default state with hooks\n\tconst [folders, setFolders] = useState([]);\n\tconst [notes, setNotes] = useState([]);\n\tconst [foldersError, setFoldersError] = useState(null);\n\tconst [notesError, setNotesError] = useState(null);\n\n\t// to see foldersError in ui:\n\t// const [foldersError, setFoldersError] = useState({ value: 'foldersAPI errorMessage' });\n\n\t// to see notesError in ui:\n\t// const [notesError, setNotesError] = useState({value: 'notesAPI errorMessage'});\n\n\t// deleteNotes updates state\n\t// and inside render context is updated with values from state\n\t// then context is used to display values in FolderList and NoteList\n\t/*\n    After making successful a DELETE API request, you can use a this.state.notes.filter method along with setState to remove a note from state and update context.\n    */\n\tconst deleteNote = noteId => {\n\t\tconst newNotes = notes.filter(note => note.id !== noteId);\n\t\tsetNotes(newNotes);\n\t};\n\n\tconst addNote = note => {\n\t\tsetNotes([...notes, note]);\n\t};\n\n\tconst addFolder = folder => {\n\t\tsetFolders([...folders, folder]);\n\t};\n\n\tconst addErrorNotes = error => {\n\t\tsetNotesError(error);\n\t};\n\n\t/*\n    // NOTE NOTE NOTE\n    // Pattern: every route is responsible for loading the data it needs from scratch\n\n    // So the component rendering the /detail/:id route needs to fetch data for itself, including the correct id to use from the url, via the props React Router provides.\n    */\n\n\tconst getFolders = () => {\n\t\tfetch(config.API_FOLDERS, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tthrow new Error(res.status);\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(setFolders)\n\t\t\t// passes res to setFolders function\n\t\t\t// shortcut which equals .then(res => this.setFolders(res))\n\t\t\t.catch(error => setFoldersError(error));\n\t};\n\n\tconst getNotes = () => {\n\t\tfetch(config.API_NOTES, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json'\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tthrow new Error(res.status);\n\t\t\t\t}\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then(setNotes)\n\t\t\t// passes res to setNotes function\n\t\t\t// shortcut which equals .then(res => this.setNotes(res))\n\t\t\t.catch(error => setNotesError(error));\n\t};\n\n\t// only load ONCE, to fetch initial API data\n\tuseEffect(() => {\n\t\tgetFolders();\n\t\tgetNotes();\n\t}, []); /* add an empty array as the 2nd argument to have this run only 1x after the initial render */\n\n\t// create object to update the values stored in NotefulContext\n\tconst contextObj = {\n\t\tnotes: notes,\n\t\tfolders: folders,\n\t\tdeleteNote: deleteNote,\n\t\taddNote: addNote,\n\t\taddFolder: addFolder,\n\t\taddErrorNotes: addErrorNotes,\n\t\tnotesError: notesError\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t{/* actually update the values stored in NotefulContext by passing contextObj into value\n\n                Use the Provider to make values available to all children/grandchildren/subcomponents\n\n                See: https://reactjs.org/docs/context.html#caveats\n\n                -- the code below will re-render all consumers every time the Provider re-renders because a new object is always created for value\n                */}\n\t\t\t<NotefulContext.Provider value={contextObj}>\n\t\t\t\t<main>\n\t\t\t\t\t<div className=\"aside\">\n\t\t\t\t\t\t{foldersError && <p className=\"error\">{foldersError.value}</p>}\n\t\t\t\t\t\t{routes.map(({ path, exact, aside: A }) => (\n\t\t\t\t\t\t\t<Route key={path} path={path} exact={exact} component={A} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<article>\n\t\t\t\t\t\t{/* NOTE:\n                         CAN use render props to pass unfinishedMessage prop via route\n                         AND\n                         to pass location, match and history props to the component so that in the component I have access to the history object to push a new location into\n\n                                    render={props => (\n                                        <S\n                                        {...props}\n                                        unfinishedMessage={unfinishedMessage} />\n                                    )}\n\n                        can also pass unfinishedMessage via Context and do:\n                        component={S}\n                        */}\n\n\t\t\t\t\t\t{notesError && <p className=\"error\">{notesError.value}</p>}\n\n\t\t\t\t\t\t{routes.map(({ path, exact, section: S }) => (\n\t\t\t\t\t\t\t<Route key={path} path={path} exact={exact} component={S} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</article>\n\t\t\t\t</main>\n\t\t\t</NotefulContext.Provider>\n\n\t\t\t<Footer />\n\t\t</>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}